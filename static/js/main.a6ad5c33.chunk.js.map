{"version":3,"sources":["images/storyland-white.png","images/storyland-main-dark.png","screens/Landing.js","contexts/AuthStore.js","services/base-http-service.js","services/auth-service.js","components/misc/BasicTopBar.js","utils/createForm.js","components/InputField.js","utils/validators.js","services/books-service.js","components/RegisterBookItem.js","components/RegisterForm.js","screens/Register.js","components/LoginForm.js","screens/Login.js","components/misc/UserNavBar.js","components/explore/SearchBar.js","components/books/BookListItem.js","components/books/SearchBooksList.js","utils/sliderSettings.js","components/books/BookItem.js","components/explore/ExploreBestRatedBooks.js","components/explore/ExploreRelatedBooks.js","components/explore/ExploreLatestBooks.js","components/explore/ExploreBooksByGenre.js","screens/user/Explore.js","services/goals-service.js","components/motivation/ReadToday.js","components/motivation/DateChart.js","screens/user/Motivation.js","services/user-service.js","components/friends/UserItem.js","components/friends/UserList.js","screens/user/Friends.js","services/userbook-service.js","screens/user/BookDetail.js","components/friends/FriendProfileBox.js","components/friends/ReadingBookItem.js","components/friends/RelatedFriendBooks.js","components/friends/UserDetail.js","components/profile/SocialProfileBox.js","components/profile/ProfileBox.js","components/books/ProfileBooksList.js","components/profile/PendingBooks.js","components/profile/ReadBooks.js","components/profile/ReadingBooks.js","screens/user/Profile.js","screens/user/UserContainer.js","screens/errors/Error.js","guards/PrivateRoute.js","guards/LoggedRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Landing","react_default","a","createElement","className","src","logoWhite","alt","react_router_dom","to","CURRENT_USER_KEY","AuthContext","React","createContext","AuthStore","state","user","JSON","parse","localStorage","getItem","handleUserChange","_this","setState","email","setItem","stringify","removeItem","isAuthenticated","Provider","value","this","onUserChanged","props","children","Component","withAuthConsumer","Consumer","storeProps","Object","assign","http","axios","create","baseURL","withCredentials","auth_service","login","post","then","response","data","register","logout","updateProfile","FormData","keys","forEach","prop","password","append","put","res","Promise","resolve","library","add","faArrowLeft","faSignOutAlt","BasicTopBar","handleLogout","authService","history","push","handleBack","goBack","id","onClick","react_fontawesome_index_es","icon","react","withRouter","customCreateForm","createDOMForm","validateMessages","required","field","InputField","_this$props","onChange","errors","onblur","type","allowClear","hasErrors","length","input","onBlur","map","error","index","key","defaultProps","emailPattern","passwordPattern","checkName","_","cb","Error","checkEmail","test","checkPassword","books_service","getRegisterBooks","get","getAllBooks","getRelatedBooks","genres","includes","replace","concat","getBestRatedBooks","rating","getLatestBooks","year","getSearchedBook","search","getOneBook","book","postCoverBook","file","RegisterBookItem","isActive","bookClicked","imageLink","title","RegisterForm","registerBooks","favBooks","secondScreen","isRegistered","postButton","submitFirstForm","event","form","preventDefault","validateFields","fields","handleRegisterBooks","submitRegister","_this$state","fGenres","elem","names","unique","i","removeDups","slice","favGenres","message","bookService","books","handleCoverChange","toConsumableArray","filter","handlePostButton","_this2","_this$props$form","getFieldProps","getFieldError","_this$state2","isFavBook","RegisterBookItem_RegisterBookItem","react_router","onSubmit","components_InputField","name","validateFirst","validateTrigger","rules","validator","mail","disabled","createForm","Register","misc_BasicTopBar","components_RegisterForm","LoginForm","submitLogin","Login","components_LoginForm","faHome","faCompass","faUsers","faUserCircle","UserNavBar","activeClassName","SearchBar","_ref","onSearch","uploadCover","placeholder","e","target","upload","listType","beforeUpload","es_button","htmlType","style","fontSize","BookListItem","_props$book","authors","join","handleAuthors","href","SearchBooksList","books_BookListItem","sliderSettings","infinite","speed","slidesToShow","swipeToSlide","variableWidth","responsive","breakpoint","settings","slidesToScroll","BookItem","_this$props$book","ExploreBestRatedBooks","componentDidMount","booksService","sort","Math","random","BookItem_BookItem","lib_default","ExploreLatestBooks","ExploreRelatedBooks","genre","handleSelectChange","handleGenreBooks","es_select","defaultValue","Option","Explore","coverBook","debounce","closeCoverSearch","bind","SearchBooksList_SearchBooksList","explore_ExploreRelatedBooks","ExploreBestRatedBooks_ExploreBestRatedBooks","ExploreLatestBooks_ExploreLatestBooks","ExploreBooksByGenre","goals_service","createGoal","goal","getGoals","getLastGoals","days","pagesDay","handlePagesChange","pages","handlePagesSubmit","goalsService","pagesGoal","congratsBox","valuePages","goals","todayDate","Date","goalDate","updatedAt","day","getDate","month","getMonth","getFullYear","period","pagesRead","handlePeriodChange","periodSelect","handleDataGraphic","unshiftToData","x","y","unshift","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","date","DateTime","fromJSDate","monthShort","err","return","setDataGraphic","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","weekdayShort","reduce","acc","dataArr","responsiveLine","es","margin","top","right","bottom","left","curve","axisTop","axisRight","axisBottom","axisLeft","enableGridY","enableGridX","lineWidth","dotSize","colors","dotColor","dotLabelYOffset","isInteractive","enableStackTooltip","animate","motionStiffness","motionDamping","Motivation","congratsText","handleCongratsText","isAchievedGoal","closeCongratsBox","motivation_DateChart","motivation_ReadToday","user_service","getUser","getUsers","getSocialUsers","followUser","unfollowUser","delete","UserItem","_this$state$user","avatarURL","users","loading","userService","asyncToGenerator","regenerator_default","mark","_callee","bookReading","wrap","_context","prev","userbooks","find","abrupt","readingBook","image","stop","_x","apply","arguments","all","UserItem_UserItem","Friends","friends_UserList","userbook_service","getProfileBooks","params","getStateBook","createStateBook","Panel","Collapse","BookDetail","relatedBooks","handleStateButton","userbooksService","formatDate","toLocaleDateString","bookId","match","_ref2","slicedToArray","prevProps","_ref3","_ref4","document","querySelector","scrollTop","publishedDate","isbn","collapse","bordered","defaultActiveKey","googleRating","header","pageCount","description","FriendProfileBox","handleGenres","friend","_this$props$friend","followers","userId","followButton","some","follower","handleFollow","handleUnfollow","ReadingBookItem","friendName","substr","indexOf","RelatedFriendBooks","relation","objectSpread","friends_FriendProfileBox","ReadingBookItem_ReadingBookItem","RelatedFriendBooks_RelatedFriendBooks","followed","following","social","faCog","ProfileBox","editBox","avatar","editProfile","cancelEdit","submitProfile","profile_SocialProfileBox","URL","createObjectURL","initialValue","ProfileBooksList","userbookService","PendingBooks","ProfileBooksList_ProfileBooksList","ReadBooks","ReadingBooks","Profile","profile_ProfileBox","ReadingBooks_ReadingBooks","PendingBooks_PendingBooks","ReadBooks_ReadBooks","UserContainer","exact","path","component","UserDetail","UserNavBar_UserNavBar","code","level","role","Forbidden","Error_Error","NotFound","PrivateRoute","rest","objectWithoutProperties","render","LoggedRoute","App","guards_LoggedRoute","guards_PrivateRoute","Boolean","window","location","hostname","ReactDOM","basename","PUBLIC_URL","AuthStore_AuthStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6ad5c33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/storyland-white.7075a412.png\";","module.exports = __webpack_public_path__ + \"static/media/storyland-main-dark.e6a93caf.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logoWhite from '../images/storyland-white.png';\n\nconst Landing = () => {\n  return (\n    <div className='landing-web'>\n      <div className='landing-info'>\n        <div className='landing-logo'>\n          <img src={logoWhite} alt='storyland-app' />\n        </div>\n        <div className='landing-buttons'>\n          <div>\n            <Link to='/register'>\n              <button className='my-button reg-button'>Register</button>\n            </Link>\n          </div>\n          <div>\n            <Link to='/login'>\n              <button className='my-button log-button'>Login</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { Component } from 'react';\n\nconst CURRENT_USER_KEY = 'current-user';\n\nconst AuthContext = React.createContext();\n\nclass AuthStore extends Component {\n  state = {\n    user: JSON.parse(localStorage.getItem(CURRENT_USER_KEY) || '{}')\n  };\n\n  handleUserChange = user => {\n    this.setState({ user: user });\n    if (user && user.email) {\n      localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(user));\n    } else {\n      localStorage.removeItem(CURRENT_USER_KEY);\n    }\n  };\n\n  isAuthenticated = () => this.state.user && this.state.user.email;\n\n  render() {\n    return (\n      <AuthContext.Provider\n        value={{\n          user: this.state.user,\n          onUserChanged: this.handleUserChange,\n          isAuthenticated: this.isAuthenticated\n        }}\n      >\n        {this.props.children}\n      </AuthContext.Provider>\n    );\n  }\n}\n\nconst withAuthConsumer = Component => {\n  return props => (\n    <AuthContext.Consumer>\n      {storeProps => <Component {...props} {...storeProps} />}\n    </AuthContext.Consumer>\n  );\n};\n\nexport { AuthContext, AuthStore, withAuthConsumer };\n","import axios from 'axios';\n\nconst http = axios.create({\n  baseURL: 'http://localhost:3001',\n  withCredentials: true\n});\n\nexport default http;\n","import http from './base-http-service';\n\nconst login = user => http.post('/login', user).then(response => response.data);\n\nconst register = user =>\n  http.post('/register', user).then(response => response.data);\n\nconst logout = () => http.post('/logout').then(response => response.data);\n\nconst updateProfile = user => {\n  const data = new FormData();\n  Object.keys(user).forEach(prop => {\n    if (prop === 'password' && user.password === '') return;\n    data.append(prop, user[prop]);\n  });\n  return http\n    .put('/users/profile', data)\n    .then(res => Promise.resolve(res.data));\n};\n\nexport default {\n  login,\n  register,\n  logout,\n  updateProfile\n};\n","import React, { Fragment, Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport authService from '../../services/auth-service';\nimport { withRouter } from 'react-router-dom';\nimport logoWhite from '../../images/storyland-main-dark.png';\n\nlibrary.add(faArrowLeft);\nlibrary.add(faSignOutAlt);\n\nclass BasicTopBar extends Component {\n  handleLogout = () => {\n    authService.logout().then(() => {\n      const { history } = this.props;\n      this.props.onUserChanged({});\n      history.push('/login');\n    });\n  };\n\n  handleBack = () => {\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { user } = this.props;\n    return (\n      <nav className='basic-nav'>\n        <div className='nav-wrapper basic-nav-list'>\n          <ul id='nav-mobile' className='left'>\n            <li\n              className='basic-nav-item basic-nav-item-back'\n              onClick={this.handleBack}\n            >\n              <FontAwesomeIcon icon='arrow-left' />\n            </li>\n          </ul>\n          <Link className='brand-logo center' to='/user/home'>\n            <img\n              className='basic-nav-logo'\n              src={logoWhite}\n              alt='storyland-app'\n            />\n          </Link>\n          <ul id='nav-mobile' className='right right-register-topbar'>\n            {!user.email && (\n              <Fragment>\n                <li className='basic-nav-item'>\n                  <Link className='nav-link' to='/register'>\n                    Register\n                  </Link>\n                </li>\n                <li className='basic-nav-item'>\n                  <Link className='nav-link' to='/login'>\n                    Login\n                  </Link>\n                </li>\n              </Fragment>\n            )}\n            {user.email && (\n              <Fragment>\n                <li\n                  className='basic-nav-item basic-nav-item-back'\n                  onClick={this.handleLogout}\n                >\n                  <FontAwesomeIcon icon='sign-out-alt' />\n                </li>\n              </Fragment>\n            )}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default withAuthConsumer(withRouter(BasicTopBar));\n","import createDOMForm from 'rc-form/lib/createDOMForm';\n\nconst customCreateForm = () =>\n  createDOMForm({\n    validateMessages: {\n      required(field) {\n        return 'Required field';\n      }\n    }\n  });\n\nexport { customCreateForm as createForm };\n","import React, { Component } from 'react';\nimport { Input } from 'antd';\n\nclass InputField extends Component {\n  render() {\n    const {\n      onChange,\n      value,\n      errors,\n      onblur,\n      className,\n      type,\n      allowClear\n    } = this.props;\n    const hasErrors = errors && errors.length > 0;\n    return (\n      <div className={className}>\n        <Input\n          onChange={onChange}\n          value={value}\n          {...(type ? { type } : null)}\n          {...(allowClear ? { allowClear } : null)}\n          {...(onblur ? { onBlur: onblur } : null)}\n        />\n        {hasErrors &&\n          errors.map((error, index) => (\n            <p className='error' key={index}>\n              {error}\n            </p>\n          ))}\n      </div>\n    );\n  }\n}\n\nInputField.defaultProps = {\n  className: ''\n};\n\nexport default InputField;\n","const emailPattern = /(.+)@(.+){2,}\\.(.+){2,}/i;\nconst passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d){6,}/;\n\nexport const isEmail = email => email && emailPattern.test(email);\nexport const isGoodPassword = password =>\n  password && passwordPattern.test(password);\n\nexport const checkName = (_, value, cb) =>\n  value && value.length >= 3\n    ? cb()\n    : cb(new Error('Name needs at least 3 chars'));\n\nexport const checkEmail = (_, value, cb) =>\n  isEmail(value) ? cb() : cb(new Error('Invalid mail'));\n\nexport const checkPassword = (_, value, cb) =>\n  isGoodPassword(value)\n    ? cb()\n    : cb(new Error('Password needs uppercase, lowercase and numbers'));\n","import http from './base-http-service';\n\nconst getRegisterBooks = () =>\n  http.get('/books/register').then(response => response.data);\n\nconst getAllBooks = () => http.get('/books').then(response => response.data);\n\nconst getRelatedBooks = genres => {\n  if (genres.includes('&')) {\n    genres = genres.replace('&', '@');\n  }\n  return http.get(`/books?genres=${genres}`).then(response => response.data);\n};\n\nconst getBestRatedBooks = rating =>\n  http.get(`/books?rating=${rating}`).then(response => response.data);\n\nconst getLatestBooks = year =>\n  http.get(`/books?year=${year}`).then(response => response.data);\n\nconst getSearchedBook = search =>\n  http.post(`/books/${search}`).then(response => response.data);\n\nconst getOneBook = book =>\n  http.get(`/books/${book}`).then(response => response.data);\n\nconst postCoverBook = file => {\n  const data = new FormData();\n  data.append('cover', file);\n  return http\n    .post('/books/scancover', data)\n    .then(res => Promise.resolve(res.data));\n};\n\nexport default {\n  getRegisterBooks,\n  getAllBooks,\n  getRelatedBooks,\n  getBestRatedBooks,\n  getLatestBooks,\n  getSearchedBook,\n  getOneBook,\n  postCoverBook\n};\n","import React, { Component } from 'react';\n\nexport default class RegisterBookItem extends Component {\n  render() {\n    const { book, isActive } = this.props;\n    return (\n      <div\n        className='register-book-item'\n        onClick={() => this.props.bookClicked(book)}\n      >\n        <img\n          className={isActive ? 'register-book-active' : ''}\n          src={book.imageLink}\n          alt={book.title}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createForm } from '../utils/createForm';\nimport InputField from './InputField';\nimport { checkName, checkEmail, checkPassword } from '../utils/validators';\nimport { Icon } from 'antd';\nimport authService from '../services/auth-service';\nimport bookService from '../services/books-service';\nimport RegisterBookItem from './RegisterBookItem';\n\nclass RegisterForm extends Component {\n  state = {\n    user: {},\n    registerBooks: [],\n    favBooks: [],\n    error: '',\n    secondScreen: false,\n    isRegistered: false,\n    postButton: false\n  };\n\n  submitFirstForm = event => {\n    const { form } = this.props;\n    event.preventDefault();\n    form.validateFields((errors, fields) => {\n      const hasErrors = errors && Object.keys(errors).length > 0;\n      if (!hasErrors)\n        this.setState({\n          user: fields,\n          secondScreen: true\n        });\n      this.handleRegisterBooks();\n    });\n  };\n\n  submitRegister = event => {\n    let { user, favBooks } = this.state;\n    event.preventDefault();\n    if (favBooks.length > 2) {\n      let fGenres = favBooks.map(elem => elem.genres[0]);\n      fGenres = removeDups(fGenres);\n      fGenres = fGenres.slice(0, 3);\n      user.favGenres = fGenres;\n      authService.register(user).then(\n        user => {\n          this.setState({\n            isRegistered: true\n          });\n        },\n        error => {\n          const { message } = error.response.data;\n          this.setState({\n            error: message,\n            secondScreen: false\n          });\n        }\n      );\n    }\n\n    function removeDups(names) {\n      let unique = {};\n      names.forEach(function(i) {\n        if (!unique[i]) {\n          unique[i] = true;\n        }\n      });\n      return Object.keys(unique);\n    }\n  };\n\n  handleRegisterBooks = () => {\n    bookService.getRegisterBooks().then(books => {\n      this.setState({\n        registerBooks: books\n      });\n    });\n  };\n\n  handleCoverChange = book => {\n    if (this.state.favBooks.includes(book)) {\n      this.setState(\n        {\n          favBooks: [...this.state.favBooks].filter(elem => elem !== book)\n        },\n        () => {\n          this.handlePostButton();\n        }\n      );\n    } else {\n      this.setState({ favBooks: [...this.state.favBooks, book] }, () => {\n        this.handlePostButton();\n      });\n    }\n  };\n\n  handlePostButton = () => {\n    if (this.state.favBooks.length > 2) {\n      this.setState({ postButton: true });\n    } else {\n      this.setState({ postButton: false });\n    }\n  };\n\n  render() {\n    const { getFieldProps, getFieldError } = this.props.form;\n    const {\n      user,\n      error,\n      secondScreen,\n      isRegistered,\n      favBooks,\n      postButton\n    } = this.state;\n    const registerBooks = this.state.registerBooks.map(elem => {\n      let isFavBook = favBooks.includes(elem) ? true : false;\n      return (\n        <RegisterBookItem\n          book={elem}\n          key={elem.id}\n          bookClicked={this.handleCoverChange}\n          isActive={isFavBook}\n        />\n      );\n    });\n    if (isRegistered) {\n      return <Redirect to='/login' />;\n    }\n    return (\n      <div className='reg-container'>\n        {!this.state.secondScreen && (\n          <form onSubmit={this.submitFirstForm} className='reg-form'>\n            <div className='form-item'>\n              <Icon type='user' />\n              <label>Name</label>\n              <InputField\n                value={user.name}\n                type='text'\n                allowClear\n                {...getFieldProps('name', {\n                  validateFirst: true,\n                  validateTrigger: 'onblur',\n                  rules: [{ required: true, validator: checkName }]\n                })}\n                errors={getFieldError('name')}\n              />\n            </div>\n            <div className='form-item'>\n              <Icon type='mail' />\n              <label>Email</label>\n              <InputField\n                value={user.mail}\n                type='email'\n                allowClear\n                {...getFieldProps('email', {\n                  validateFirst: true,\n                  validateTrigger: 'onblur',\n                  rules: [{ required: true, validator: checkEmail }]\n                })}\n                errors={getFieldError('email')}\n              />\n            </div>\n            <div className='form-item'>\n              <Icon type='lock' />\n              <label>Password</label>\n              <InputField\n                type='password'\n                allowClear\n                {...getFieldProps('password', {\n                  validateFirst: true,\n                  validateTrigger: 'onblur',\n                  rules: [{ required: true, validator: checkPassword }]\n                })}\n                errors={getFieldError('password')}\n              />\n            </div>\n            <p className='error'>{error}</p>\n            <div className='form-item'>\n              <div className='form-item-submit'>\n                <button type='submit' className='my-button next-button'>\n                  Next\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n\n        {secondScreen === true && (\n          <Fragment>\n            <h4 className='choose-register-title'>\n              Choose 3 or more books that you like\n            </h4>\n            <div className='register-books-container'>{registerBooks}</div>\n            <div className='form-item-submit'>\n              {!postButton && (\n                <button\n                  type='submit'\n                  className='my-button post-button disabled-button'\n                  onClick={this.submitRegister}\n                  disabled\n                >\n                  Register\n                </button>\n              )}\n              {postButton && (\n                <button\n                  type='submit'\n                  className='my-button post-button'\n                  onClick={this.submitRegister}\n                >\n                  Register\n                </button>\n              )}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default createForm()(RegisterForm);\n","import React, { Fragment } from 'react';\nimport BasicTopBar from '../components/misc/BasicTopBar';\nimport RegisterForm from '../components/RegisterForm';\n\nconst Register = () => {\n  return (\n    <Fragment>\n      <BasicTopBar />\n      <div className='screen-wrapper'>\n        <div className='form-container'>\n          <h1 className='reg-title'>Register</h1>\n          <RegisterForm />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createForm } from '../utils/createForm';\nimport InputField from './InputField';\nimport { checkEmail, checkPassword } from '../utils/validators';\nimport { Icon } from 'antd';\nimport authService from '../services/auth-service';\nimport { withAuthConsumer } from '../contexts/AuthStore';\n\nclass LoginForm extends Component {\n  state = {\n    error: '',\n    isAuthenticated: false\n  };\n\n  submitLogin = event => {\n    const { form } = this.props;\n    event.preventDefault();\n    form.validateFields((errors, fields) => {\n      const hasErrors = errors && Object.keys(errors).length > 0;\n      if (!hasErrors) {\n        authService.login(fields).then(\n          user => {\n            this.setState({ isAuthenticated: true }, () => {\n              this.props.onUserChanged(user);\n            });\n          },\n          error => {\n            const { message } = error.response.data;\n            this.setState({\n              error: message\n            });\n          }\n        );\n      }\n    });\n  };\n\n  render() {\n    const { getFieldProps, getFieldError } = this.props.form;\n    const { error, isAuthenticated } = this.state;\n    if (isAuthenticated) {\n      return <Redirect to='/user/explore' />;\n    }\n    return (\n      <div className='reg-container'>\n        <form onSubmit={this.submitLogin} className='reg-form'>\n          <div className='form-item'>\n            <Icon type='mail' />\n            <label>Email</label>\n            <InputField\n              type='email'\n              allowClear\n              {...getFieldProps('email', {\n                validateFirst: true,\n                validateTrigger: 'onblur',\n                rules: [{ required: true, validator: checkEmail }]\n              })}\n              errors={getFieldError('email')}\n            />\n          </div>\n          <div className='form-item'>\n            <Icon type='lock' />\n            <label>Password</label>\n            <InputField\n              type='password'\n              allowClear\n              {...getFieldProps('password', {\n                validateFirst: true,\n                validateTrigger: 'onblur',\n                rules: [{ required: true, validator: checkPassword }]\n              })}\n              errors={getFieldError('password')}\n            />\n          </div>\n          <p className='error'>{error}</p>\n          <div className='form-item'>\n            <div className='form-item-submit'>\n              <button type='submit' className='my-button next-button'>\n                Log in\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(createForm()(LoginForm));\n","import React, { Fragment } from 'react';\nimport BasicTopBar from '../components/misc/BasicTopBar';\nimport LoginForm from '../components/LoginForm';\n\nconst Login = () => {\n  return (\n    <Fragment>\n      <BasicTopBar />\n      <div className='screen-wrapper'>\n        <div className='form-container'>\n          <h1 className='reg-title'>Login</h1>\n          <LoginForm />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { faCompass } from '@fortawesome/free-solid-svg-icons';\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faHome);\nlibrary.add(faCompass);\nlibrary.add(faUsers);\nlibrary.add(faUserCircle);\n\nexport default class UserNavBar extends Component {\n  render() {\n    return (\n      <div className='usernavbar'>\n        <ul className='usernavbar-container'>\n          <li>\n            <NavLink\n              className='nav-link'\n              activeClassName='active'\n              to='/user/home'\n            >\n              <div className='usernavbar-item'>\n                <FontAwesomeIcon icon='home' />\n              </div>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              className='nav-link'\n              activeClassName='active'\n              to='/user/explore'\n            >\n              <div className='usernavbar-item'>\n                <FontAwesomeIcon icon='compass' />\n              </div>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              className='nav-link'\n              activeClassName='active'\n              to='/user/friends'\n            >\n              <div className='usernavbar-item'>\n                <FontAwesomeIcon icon='users' />\n              </div>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              className='nav-link'\n              activeClassName='active'\n              to='/user/profile'\n            >\n              <div className='usernavbar-item'>\n                <FontAwesomeIcon icon='user-circle' />\n              </div>\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Input, Upload, Button, Icon } from 'antd';\n\nexport default ({ onSearch, uploadCover }) => (\n  <div className='field explore-search-bar'>\n    <Input\n      className='input'\n      type='text'\n      placeholder='Search'\n      allowClear\n      onChange={e => onSearch(e.target.value)}\n    />\n    <Upload\n      className='upload-cover-book'\n      name='cover'\n      listType='picture'\n      beforeUpload={file => {\n        uploadCover(file);\n        return false;\n      }}\n    >\n      <Button htmlType='button'>\n        <Icon type='camera' style={{ fontSize: '20px' }} />\n      </Button>\n    </Upload>\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BookListItem = props => {\n  const handleAuthors = () => {\n    if (props.book.authors) {\n      let authors = [props.book.authors];\n      if (authors.length === 1) authors = authors[0];\n      if (authors.length > 1) authors = authors.join(' & ');\n      return authors;\n    } else {\n      return '';\n    }\n  };\n\n  const { imageLink, title, id } = props.book;\n  const authors = handleAuthors();\n\n  return (\n    <li className='collection-item avatar'>\n      <Link to={`/user/explore/${id}`}>\n        <img src={imageLink} alt={title} className='circle' />\n        <span className='title'>\n          <strong>{title}</strong>\n        </span>\n        <p className='authors-item'>{authors}</p>\n      </Link>\n      <a href='#!' className='secondary-content'>\n        <i className='material-icons' />\n      </a>\n    </li>\n  );\n};\n\nexport default BookListItem;\n","import React, { Component } from 'react';\nimport BookListItem from './BookListItem';\n\nexport default class SearchBooksList extends Component {\n  render() {\n    let books = [];\n    if (this.props.books !== '') {\n      books = this.props.books.map(book => {\n        return <BookListItem book={book} key={book.id} />;\n      });\n    } else {\n      books = (\n        <li className='collection-item avatar'>\n          <span className='title'>\n            <strong>Not books found</strong>\n          </span>\n        </li>\n      );\n    }\n\n    return (\n      <div className='booklist-container'>\n        <ul className='collection'>{books}</ul>\n      </div>\n    );\n  }\n}\n","const sliderSettings = {\n  infinite: true,\n  speed: 500,\n  slidesToShow: 10,\n  swipeToSlide: true,\n  variableWidth: true,\n  responsive: [\n    {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 2\n      }\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 2\n      }\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1\n      }\n    }\n  ]\n};\n\nexport default sliderSettings;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class BookItem extends Component {\n  render() {\n    const { imageLink, title, id } = this.props.book;\n    // const genre = genres[0];\n\n    return (\n      <li className='book-card card'>\n        <Link to={`/user/explore/${id}`}>\n          <figure className='card-image'>\n            <img className='book-cover' src={imageLink} alt={title} />\n            {/* <span className='badge red'>{genre}</span> */}\n          </figure>\n        </Link>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport BookItem from '../books/BookItem';\n\nexport default class ExploreBestRatedBooks extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount = () => {\n    booksService.getBestRatedBooks(5).then(response => {\n      this.setState({\n        books: response\n      });\n    });\n  };\n\n  render() {\n    const books = this.state.books\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        return <BookItem key={book.id} book={book} />;\n      });\n\n    return (\n      <div className='category-screen'>\n        <h4 className='category-title'>Best rated books</h4>\n        <ul className='book-container'>\n          <Slider {...sliderSettings}>{books}</Slider>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport BookItem from '../books/BookItem';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\n\nclass ExploreRelatedBooks extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount = () => {\n    const genres = this.props.user.favGenres.join(',');\n    booksService.getRelatedBooks(genres).then(response => {\n      this.setState({\n        books: response\n      });\n    });\n  };\n\n  render() {\n    const books = this.state.books\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        return <BookItem key={book.id} book={book} />;\n      });\n\n    return (\n      <div className='category-screen'>\n        <h4 className='category-title'>Books that you will like</h4>\n        <ul className='book-container'>\n          <Slider {...sliderSettings}>{books}</Slider>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(ExploreRelatedBooks);\n","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport BookItem from '../books/BookItem';\n\nexport default class ExploreLatestBooks extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount = () => {\n    booksService.getLatestBooks(2019).then(response => {\n      this.setState({\n        books: response\n      });\n    });\n  };\n\n  render() {\n    const books = this.state.books\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        return <BookItem key={book.id} book={book} />;\n      });\n\n    return (\n      <div className='category-screen'>\n        <h4 className='category-title'>Latest books</h4>\n        <ul className='book-container'>\n          <Slider {...sliderSettings}>{books}</Slider>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport { Select } from 'antd';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport BookItem from '../books/BookItem';\n\nclass ExploreRelatedBooks extends Component {\n  state = {\n    books: [],\n    genre: ''\n  };\n\n  handleSelectChange = event => {\n    const genre = event;\n    this.handleGenreBooks(genre);\n  };\n\n  handleGenreBooks = genre => {\n    booksService.getRelatedBooks(genre).then(response => {\n      this.setState({\n        books: response\n      });\n    });\n  };\n\n  componentDidMount = () => {\n    this.handleGenreBooks('Fiction');\n  };\n\n  render() {\n    const books = this.state.books\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        return <BookItem key={book.id} book={book} />;\n      });\n    return (\n      <div className='category-screen'>\n        <div className='genre-input'>\n          <h4 className='category-title'>Books by genre</h4>\n          <Select defaultValue='Fiction' onChange={this.handleSelectChange}>\n            <Select.Option value={`Biography & Autobiography`}>\n              Biography & Autobiography\n            </Select.Option>\n            <Select.Option value={`Business & Economics`}>\n              Business & Economics\n            </Select.Option>\n            <Select.Option value='Fiction'>Fiction</Select.Option>\n            <Select.Option value={`Health & Fitness`}>\n              Health & Fitness\n            </Select.Option>\n            <Select.Option value='Juvenile Nonfiction'>\n              Juvenile Nonfiction\n            </Select.Option>\n            <Select.Option value='History'>History</Select.Option>\n            <Select.Option value='Literary Collections'>\n              Literary Collections\n            </Select.Option>\n            <Select.Option value='Performing Arts'>\n              Performing Arts\n            </Select.Option>\n            <Select.Option value='Political Science'>\n              Political Science\n            </Select.Option>\n            <Select.Option value='Self-Help'>Self-Help</Select.Option>\n            <Select.Option value='Social Science'>Social Science</Select.Option>\n          </Select>\n        </div>\n        <ul className='book-container'>\n          <Slider {...sliderSettings}>{books}</Slider>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ExploreRelatedBooks;\n","import React, { Component, Fragment } from 'react';\nimport booksService from '../../services/books-service';\nimport debounce from 'lodash/debounce';\nimport { Icon } from 'antd';\nimport SearchBar from '../../components/explore/SearchBar';\nimport SearchBooksList from '../../components/books/SearchBooksList';\nimport ExploreBestRatedBooks from '../../components/explore/ExploreBestRatedBooks';\nimport ExploreRelatedBooks from '../../components/explore/ExploreRelatedBooks';\nimport ExploreLatestBooks from '../../components/explore/ExploreLatestBooks';\nimport ExploreBooksByGenre from '../../components/explore/ExploreBooksByGenre';\n\nclass Explore extends Component {\n  state = {\n    books: [],\n    search: '',\n    coverBook: false\n  };\n\n  onSearch = debounce(search => {\n    this.setState({ search });\n    if (search.length > 3) {\n      booksService.getSearchedBook(search).then(books => {\n        this.setState({ books });\n      });\n    }\n  }, 1000);\n\n  uploadCover = file => {\n    booksService.postCoverBook(file).then(books => {\n      this.setState({ books, coverBook: true });\n    });\n  };\n\n  closeCoverSearch = () => {\n    this.setState({ search: '', coverBook: false });\n  };\n\n  render() {\n    const { books, search, coverBook } = this.state;\n    return (\n      <div className='screen-container'>\n        <SearchBar\n          onSearch={this.onSearch.bind(this)}\n          uploadCover={this.uploadCover.bind(this)}\n        />\n        {(search || coverBook) && <SearchBooksList books={books} />}\n        {coverBook && (\n          <Icon\n            type='close-circle'\n            className='close-cover-search'\n            onClick={this.closeCoverSearch}\n          />\n        )}\n        {!search && (\n          <Fragment>\n            <ExploreRelatedBooks />\n            <ExploreBestRatedBooks />\n            <ExploreLatestBooks />\n            <ExploreBooksByGenre />\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import http from './base-http-service';\n\nconst createGoal = goal =>\n  http.post('/users/creategoal', goal).then(response => response.data);\n\nconst getGoals = () => http.get('/users/goals').then(response => response.data);\n\nconst getLastGoals = days =>\n  http.post(`/users/goals/${days}`).then(response => response.data);\n\nexport default {\n  createGoal,\n  getGoals,\n  getLastGoals\n};\n","import React, { Component } from 'react';\nimport goalsService from '../../services/goals-service';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\n\nclass ReadToday extends Component {\n  state = {\n    pagesDay: 0\n  };\n\n  handlePagesChange = event => {\n    const pages = event.target.value;\n    this.setState({\n      pagesDay: pages\n    });\n  };\n\n  handlePagesSubmit = event => {\n    event.preventDefault();\n    const goal = {\n      pagesDay: this.state.pagesDay\n    };\n    if (goal.pagesDay > 0) {\n      goalsService.createGoal(goal).then();\n      this.props.user.pagesGoal <= this.state.pagesDay\n        ? this.props.congratsBox(true)\n        : this.props.congratsBox(false);\n    }\n  };\n\n  valuePages = () => {\n    goalsService.getLastGoals(1).then(goals => {\n      if (goals.length !== 0) {\n        const todayDate = new Date();\n        const goalDate = new Date(goals[0].updatedAt);\n        const day = todayDate.getDate() === goalDate.getDate();\n        const month = todayDate.getMonth() === goalDate.getMonth();\n        const year = todayDate.getFullYear() === goalDate.getFullYear();\n        if (day && month && year) {\n          this.setState({\n            pagesDay: goals[0].pagesDay\n          });\n        }\n      }\n    });\n  };\n\n  componentDidMount = () => {\n    this.valuePages();\n  };\n\n  render() {\n    const { pagesDay } = this.state;\n    return (\n      <div className='pages-read-container'>\n        <h4 className='how-many-pages-title'>\n          How many pages did you read today?\n        </h4>\n        <div className='pages-read-today'>\n          <div className='input-field pages-input'>\n            <input\n              type='number'\n              name='pages'\n              onChange={this.handlePagesChange}\n              value={pagesDay}\n            />\n          </div>\n          <button\n            className='my-button confirm-pages'\n            onClick={this.handlePagesSubmit}\n          >\n            pages read today\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(ReadToday);\n","import React, { Component } from 'react';\nimport { DateTime } from 'luxon';\nimport { Select } from 'antd';\nimport { ResponsiveLine } from 'nivo';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport goalsService from '../../services/goals-service';\n\nclass DateChart extends Component {\n  state = {\n    period: 'month',\n    pagesRead: 0,\n    data: []\n  };\n\n  handlePeriodChange = event => {\n    const periodSelect = event;\n    this.handleDataGraphic(periodSelect);\n  };\n\n  handleDataGraphic = period => {\n    const data = [];\n\n    const unshiftToData = (x, y) => {\n      data.unshift({ x, y });\n    };\n\n    switch (period) {\n      case 'year':\n        goalsService.getLastGoals(365).then(goals => {\n          if (goals) {\n            for (let goal of goals) {\n              let date = new Date(goal.updatedAt);\n              unshiftToData(\n                DateTime.fromJSDate(date).day +\n                  DateTime.fromJSDate(date).monthShort,\n                goal.pagesDay\n              );\n            }\n          }\n          this.setDataGraphic(data, period);\n        });\n        break;\n      case 'month':\n        goalsService.getLastGoals(30).then(goals => {\n          if (goals) {\n            for (let goal of goals) {\n              let date = new Date(goal.updatedAt);\n              unshiftToData(\n                DateTime.fromJSDate(date).day +\n                  DateTime.fromJSDate(date).monthShort,\n                goal.pagesDay\n              );\n            }\n          }\n          this.setDataGraphic(data, period);\n        });\n        break;\n      case 'week':\n      default:\n        goalsService.getLastGoals(7).then(goals => {\n          if (goals) {\n            for (let goal of goals) {\n              let date = new Date(goal.updatedAt);\n              unshiftToData(\n                DateTime.fromJSDate(date).weekdayShort +\n                  DateTime.fromJSDate(date).day,\n                goal.pagesDay\n              );\n            }\n          }\n          this.setDataGraphic(data, period);\n        });\n    }\n  };\n\n  setDataGraphic = (data, period) => {\n    const pagesRead = data.reduce((acc, elem) => {\n      return acc + elem.y;\n    }, 0);\n    this.setState({\n      data,\n      period,\n      pagesRead\n    });\n  };\n\n  componentDidMount = () => {\n    this.handleDataGraphic('month');\n  };\n\n  render() {\n    const { data, pagesRead } = this.state;\n    const dataArr = [\n      {\n        id: 'Pages',\n        data: [...data]\n      }\n    ];\n    const responsiveLine = (\n      <ResponsiveLine\n        data={dataArr}\n        margin={{\n          top: 30,\n          right: 20,\n          bottom: 30,\n          left: 20\n        }}\n        curve='natural'\n        axisTop={null}\n        axisRight={null}\n        axisBottom={null}\n        axisLeft={null}\n        enableGridY={false}\n        enableGridX={false}\n        lineWidth={7}\n        dotSize={0}\n        colors='#fafafa'\n        dotColor='inherit:darker(1)'\n        dotLabelYOffset={-15}\n        isInteractive={false}\n        enableStackTooltip={false}\n        animate={true}\n        motionStiffness={100}\n        motionDamping={5}\n      />\n    );\n\n    return (\n      <div className='category-screen'>\n        <div className='pages-read-wrapper'>\n          <h2 className='pages-read-count'>{pagesRead}</h2>\n          <h4 className='pages-read-in'>pages read in</h4>\n          <Select\n            className='pages-period-select'\n            defaultValue='month'\n            onChange={this.handlePeriodChange}\n          >\n            <Select.Option value='week'>the last week</Select.Option>\n            <Select.Option value='month'>the last month</Select.Option>\n            <Select.Option value='year'>the last year</Select.Option>\n          </Select>\n        </div>\n        <div className='chart-graphic'>{responsiveLine}</div>\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(DateChart);\n","import React, { Component } from 'react';\nimport ReadToday from '../../components/motivation/ReadToday';\nimport DateChart from '../../components/motivation/DateChart';\n\nclass Motivation extends Component {\n  state = {\n    congratsBox: false,\n    congratsText: ''\n  };\n\n  handleCongratsText = isAchievedGoal => {\n    if (isAchievedGoal) {\n      this.setState({\n        congratsBox: true,\n        congratsText: 'Congrats!! You rocked your goal'\n      });\n    } else {\n      this.setState({\n        congratsBox: true,\n        congratsText:\n          \"Good! It's better than nothing. Keep improving to reach your daily goal\"\n      });\n    }\n  };\n\n  closeCongratsBox = () => {\n    this.setState({\n      congratsBox: false,\n      congratsText: ''\n    });\n  };\n\n  render() {\n    const { congratsText } = this.state;\n    return (\n      <div className='screen-container'>\n        {congratsText && (\n          <div className='congrats-box'>\n            <div className='congrats-text'>\n              <p>{congratsText}</p>\n              <button\n                className='my-button congrats-button'\n                onClick={this.closeCongratsBox}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        )}\n        <DateChart />\n        <ReadToday congratsBox={this.handleCongratsText} />\n      </div>\n    );\n  }\n}\n\nexport default Motivation;\n","import http from './base-http-service';\n\nconst getUser = id =>\n  http.get(`/users/${id}/profile`).then(response => response.data);\n\nconst getUsers = () => http.get(`/users/`).then(response => response.data);\n\nconst getSocialUsers = id =>\n  http.get(`/users/${id}/friends`).then(response => response.data);\n\nconst followUser = id =>\n  http.post(`/users/${id}/follow`).then(response => response.data);\n\nconst unfollowUser = id =>\n  http.delete(`/users/${id}/follow`).then(response => response.data);\n\nexport default {\n  getUser,\n  getUsers,\n  getSocialUsers,\n  followUser,\n  unfollowUser\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class UserItem extends Component {\n  state = {\n    user: this.props.user,\n    book: this.props.book\n  };\n\n  render() {\n    const { id, name, avatarURL } = this.state.user;\n    const { book } = this.state;\n    return (\n      <li className='collection-item avatar'>\n        <Link to={`/user/friends/${id}`}>\n          <img src={avatarURL} alt={name} className='circle' />\n          <span className='title'>\n            <strong>{name}</strong>\n          </span>\n          {book ? (\n            <p className='currently-reading'>\n              Currently reading:{' '}\n              <span className='currently-reading-text'>\n                <span className='currently-reading-title'> {book.title}</span>{' '}\n              </span>\n            </p>\n          ) : (\n            <p className='currently-reading'>Not currently reading</p>\n          )}\n        </Link>\n        <a href='#!' className='secondary-content'>\n          <i className='material-icons' />\n        </a>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport userService from '../../services/user-service';\nimport booksService from '../../services/books-service';\nimport UserItem from './UserItem';\n\nclass UserList extends Component {\n  state = {\n    users: [],\n    loading: true\n  };\n\n  componentDidMount = () => {\n    userService.getUsers().then(users => {\n      users = users.filter(user => user.id !== this.props.user.id);\n\n      users = users.map(async elem => {\n        const bookReading = elem.userbooks.find(\n          elem => elem.state === 'reading'\n        );\n        if (bookReading) {\n          return booksService.getOneBook(bookReading.book).then(bookReading => {\n            elem.readingBook = {\n              id: bookReading.id,\n              title: bookReading.title,\n              authors: bookReading.authors,\n              image: bookReading.imageLink\n            };\n            return elem;\n          });\n        } else {\n          return elem;\n        }\n      });\n\n      Promise.all(users).then(users =>\n        this.setState({ users: users, loading: false })\n      );\n    });\n  };\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n      <div className='category-screen'>\n        <h2 className='category-title'>\n          Discover what other people are reading\n        </h2>\n        <div className='friendslist-container'>\n          <ul className='collection'>\n            {!loading ? (\n              this.state.users.map(user => {\n                if (user.readingBook)\n                  return (\n                    <UserItem\n                      user={user}\n                      book={user.readingBook}\n                      key={user.id}\n                    />\n                  );\n                else return <UserItem user={user} key={user.id} />;\n              })\n            ) : (\n              <p>Loading</p>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(UserList);\n","import React, { Component } from 'react';\nimport UserList from '../../components/friends/UserList';\n\nexport default class Friends extends Component {\n  render() {\n    return (\n      <div className='screen-container'>\n        <UserList />\n      </div>\n    );\n  }\n}\n","import http from './base-http-service';\n\nconst getProfileBooks = state =>\n  http\n    .get('/users/books', {\n      params: {\n        state: state\n      }\n    })\n    .then(response => response.data);\n\nconst getStateBook = book =>\n  http.get(`/users/books/${book}`).then(response => response.data);\n\nconst createStateBook = (book, state) =>\n  http\n    .post(`/users/books/${book}?state=${state}`)\n    .then(response => response.data);\n\nexport default {\n  getProfileBooks,\n  getStateBook,\n  createStateBook\n};\n","import React, { Component } from 'react';\nimport { Collapse } from 'antd';\nimport Slider from 'react-slick';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport userbooksService from '../../services/userbook-service';\nimport BookItem from '../../components/books/BookItem';\n\nconst Panel = Collapse.Panel;\n\nexport default class BookDetail extends Component {\n  state = {\n    book: {},\n    relatedBooks: [],\n    state: ''\n  };\n\n  handleStateButton = event => {\n    const state = event.target.value;\n    this.setState({ state });\n    userbooksService.createStateBook(this.state.book.id, state);\n    userbooksService.getStateBook(this.state.book.id).then(state => {\n      this.setState({ state: state });\n    });\n  };\n\n  formatDate = date => {\n    return new Date(date).toLocaleDateString();\n  };\n\n  handleAuthors = () => {\n    if (this.state.book.authors) {\n      let authors = [this.state.book.authors];\n      if (authors.length === 1) authors = authors[0];\n      if (authors.length > 1) authors = authors.join(' & ');\n      return authors;\n    } else {\n      return '';\n    }\n  };\n\n  componentDidMount = () => {\n    const { bookId } = this.props.match.params;\n    Promise.all([\n      booksService.getOneBook(bookId),\n      userbooksService.getStateBook(bookId)\n    ]).then(([book, state]) => {\n      const genre = book.genres[0];\n      booksService.getRelatedBooks(genre).then(relatedBooks => {\n        this.setState({\n          book,\n          state,\n          relatedBooks\n        });\n      });\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    const { bookId } = this.props.match.params;\n    if (bookId !== prevProps.match.params.bookId) {\n      Promise.all([\n        booksService.getOneBook(bookId),\n        userbooksService.getStateBook(bookId)\n      ]).then(([book, state]) => {\n        const genre = book.genres[0];\n        booksService.getRelatedBooks(genre).then(relatedBooks => {\n          this.setState(\n            {\n              book,\n              state,\n              relatedBooks\n            },\n            () => (document.querySelector('body').scrollTop = 0)\n          );\n        });\n      });\n    }\n  }\n\n  render() {\n    const { book, state } = this.state;\n    const authors = this.handleAuthors();\n    const publishedDate = this.formatDate(this.state.book.publishedDate);\n    const relatedBooks = this.state.relatedBooks\n      .filter(elem => elem.isbn !== book.isbn)\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        return <BookItem key={book.id} book={book} />;\n      });\n    return (\n      <div className='screen-container'>\n        <div className='book-detail-container'>\n          <div className='book-detail-maininfo'>\n            <figure className='book-detail-cover'>\n              <img src={book.imageLink} alt={book.title} />\n            </figure>\n            <div className='book-detail-title'>\n              <h2 className='detail-title'>{book.title}</h2>\n              <h4 className='detail-author'>{authors}</h4>\n            </div>\n          </div>\n          <div className='book-detail-buttons collection'>\n            <button\n              className={\n                state === 'pending'\n                  ? 'my-button active-state'\n                  : 'my-button pending-button'\n              }\n              value='pending'\n              onClick={this.handleStateButton}\n            >\n              pending\n            </button>\n            <button\n              className={\n                state === 'reading'\n                  ? 'my-button active-state'\n                  : 'my-button reading-button'\n              }\n              value='reading'\n              onClick={this.handleStateButton}\n            >\n              reading\n            </button>\n            <button\n              className={\n                state === 'read'\n                  ? 'my-button active-state'\n                  : 'my-button reading-button'\n              }\n              value='read'\n              onClick={this.handleStateButton}\n            >\n              read\n            </button>\n          </div>\n          <div className='book-detail-summary'>\n            <Collapse bordered={false} defaultActiveKey={[]}>\n              {book.googleRating && (\n                <Panel header='Rating' key='1'>\n                  {book.googleRating}\n                </Panel>\n              )}\n              {book.pageCount && (\n                <Panel header='Page Count' key='2'>\n                  {book.pageCount} pages\n                </Panel>\n              )}\n              {publishedDate && (\n                <Panel header='Published Date' key='3'>\n                  Date: {publishedDate}\n                </Panel>\n              )}\n              {book.description && (\n                <Panel header='Description' key='4'>\n                  {book.description}\n                </Panel>\n              )}\n            </Collapse>\n          </div>\n        </div>\n        <div className='category-screen'>\n          <h4 className='category-title'>Related books</h4>\n          <ul className='book-container'>\n            <Slider {...sliderSettings}>{relatedBooks}</Slider>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nclass FriendProfileBox extends Component {\n  handleGenres = () => {\n    if (this.props.friend) {\n      let genres = [this.props.friend.favGenres];\n      if (genres.length === 1) genres = genres[0];\n      if (genres.length > 1) genres = genres.slice(0, 2).join(' & ');\n      return genres;\n    } else {\n      return '';\n    }\n  };\n\n  render() {\n    const { name, avatarURL, followers } = this.props.friend;\n    const { userId } = this.props;\n    const followButton = followers.some(\n      follower => follower.follower === userId\n    );\n    const genres = this.handleGenres();\n    return (\n      <div className='category-screen'>\n        <div className='card horizontal profile-card'>\n          <div className='card-image profile-avatar'>\n            <img\n              src={\n                avatarURL\n                  ? avatarURL\n                  : 'https://profile.actionsprout.com/default.jpeg'\n              }\n              alt='profile-pic'\n              className='profile-avatar-img'\n            />\n          </div>\n          <div className='card-stacked'>\n            <div className='card-content'>\n              <h4>{name}</h4>\n              <p>\n                Favorite genres: <strong>{genres}</strong>\n              </p>\n            </div>\n            <div className='card-action profile-link'>\n              {!followButton && (\n                <button\n                  className='my-button follow-button'\n                  onClick={this.props.handleFollow}\n                >\n                  Follow the reader\n                </button>\n              )}\n              {followButton && (\n                <button\n                  className='my-button unfollow-button'\n                  onClick={this.props.handleUnfollow}\n                >\n                  Unfollow the reader\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FriendProfileBox;\n","import React, { Component } from 'react';\nimport BookListItem from '../books/BookListItem';\n\nexport default class ReadingBookItem extends Component {\n  render() {\n    const { book, friendName } = this.props;\n    const name = friendName.substr(0, friendName.indexOf(' '));\n    return (\n      <div className='category-screen'>\n        <h2 className='category-title'>{name} is currently reading</h2>\n        <div className='booklist-container'>\n          <ul className='collection'>\n            <BookListItem book={book} key={book.id} />\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport BookItem from '../books/BookItem';\n\nexport default class RelatedFriendBooks extends Component {\n  state = {\n    friend: {},\n    books: []\n  };\n\n  componentDidMount = () => {\n    const genres = this.props.friend.favGenres.join(',');\n    booksService.getRelatedBooks(genres).then(response => {\n      this.setState({\n        books: response\n      });\n    });\n  };\n\n  render() {\n    const books = this.state.books\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        return <BookItem key={book.id} book={book} />;\n      });\n    const { name } = this.props.friend;\n    const friendName = name.substr(0, name.indexOf(' '));\n\n    return (\n      <div className='category-screen'>\n        <h4 className='category-title'>\n          Books related to what {friendName} likes\n        </h4>\n        <ul className='book-container'>\n          <Slider {...sliderSettings}>{books}</Slider>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport userService from '../../services/user-service';\nimport booksService from '../../services/books-service';\nimport FriendProfileBox from './FriendProfileBox';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport ReadingBookItem from './ReadingBookItem';\nimport RelatedFriendBooks from './RelatedFriendBooks';\n\nclass UserDetail extends Component {\n  state = {\n    friend: {},\n    readingBook: {},\n    followButton: false,\n    loading: true\n  };\n\n  handleFollow = () => {\n    const { friend } = this.state;\n    userService.followUser(this.state.friend.id).then(relation => {\n      if (relation) {\n        this.setState({\n          friend: {\n            ...friend,\n            followers: [...friend.followers, relation]\n          }\n        });\n      }\n    });\n  };\n\n  handleUnfollow = () => {\n    const { friend } = this.state;\n    const { user } = this.props;\n    userService.unfollowUser(this.state.friend.id).then(() => {\n      this.setState({\n        friend: {\n          ...friend,\n          followers: friend.followers.filter(\n            ({ follower }) => follower !== user.id\n          )\n        }\n      });\n    });\n  };\n\n  componentDidMount = () => {\n    const userId = this.props.match.params.userId;\n    userService.getUser(userId).then(friend => {\n      const bookReading = friend.userbooks.find(\n        elem => elem.state === 'reading'\n      );\n      if (bookReading) {\n        booksService.getOneBook(bookReading.book).then(readingBook => {\n          this.setState({ friend, readingBook, loading: false });\n        });\n      } else {\n        this.setState({ friend, loading: false });\n      }\n    });\n  };\n\n  render() {\n    const { friend, followButton, loading, readingBook } = this.state;\n    const { id } = this.props.user;\n    return (\n      <div className='screen-container'>\n        {!loading ? (\n          <Fragment>\n            <FriendProfileBox\n              friend={friend}\n              followButton={followButton}\n              handleFollow={this.handleFollow}\n              handleUnfollow={this.handleUnfollow}\n              userId={id}\n            />\n            {readingBook.title && (\n              <ReadingBookItem book={readingBook} friendName={friend.name} />\n            )}\n          </Fragment>\n        ) : (\n          <p>Loading</p>\n        )}\n        {friend.name && <RelatedFriendBooks friend={friend} />}\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(UserDetail);\n","import React, { Component } from 'react';\nimport userService from '../../services/user-service';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\n\nclass SocialProfileBox extends Component {\n  state = {\n    followed: 0,\n    following: 0\n  };\n\n  componentDidMount = () => {\n    userService.getSocialUsers(this.props.user.id).then(social => {\n      this.setState({\n        followed: social.followers.length,\n        following: social.following.length\n      });\n    });\n  };\n\n  render() {\n    const { followed, following } = this.state;\n    return (\n      <ul className='collection follow-container'>\n        <div className='follow-item'>\n          <div className='follow-content'>\n            <p>Followed by</p>\n            <span className='follow-title'>{followed}</span>\n            <p>readers</p>\n          </div>\n        </div>\n        <div className='follow-item'>\n          <div className='follow-content'>\n            <p>Following</p>\n            <span className='follow-title'>{following}</span>\n            <p>readers</p>\n          </div>\n        </div>\n      </ul>\n    );\n  }\n}\n\nexport default withAuthConsumer(SocialProfileBox);\n","import React, { Component, Fragment } from 'react';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport authService from '../../services/auth-service';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { createForm } from '../../utils/createForm';\nimport { Upload, Button, Icon } from 'antd';\nimport { checkEmail, checkName } from '../../utils/validators';\nimport InputField from '../InputField';\nimport SocialProfileBox from './SocialProfileBox';\n\nlibrary.add(faCog);\n\nclass ProfileBox extends Component {\n  state = {\n    user: this.props.user,\n    error: '',\n    editBox: false,\n    avatar: null\n  };\n\n  handleGenres = () => {\n    if (this.props.user) {\n      let genres = [this.props.user.favGenres];\n      if (genres.length === 1) genres = genres[0];\n      if (genres.length > 1) genres = genres.slice(0, 2).join(' & ');\n      return genres;\n    } else {\n      return '';\n    }\n  };\n\n  editProfile = () => {\n    this.setState({\n      editBox: true\n    });\n  };\n\n  cancelEdit = () => {\n    this.setState({\n      user: this.props.user,\n      error: '',\n      editBox: false,\n      avatar: null\n    });\n  };\n\n  submitProfile = event => {\n    const { avatar } = this.state;\n    const { form } = this.props;\n    event.preventDefault();\n    form.validateFields((errors, fields) => {\n      const hasErrors = errors && Object.keys(errors).length > 0;\n      if (!hasErrors) {\n        if (avatar) {\n          fields.avatar = avatar;\n        }\n        authService.updateProfile(fields).then(\n          user => {\n            this.setState(\n              { editBox: false, user: { ...this.state.user, ...user } },\n              () => {\n                this.props.onUserChanged(user);\n              }\n            );\n          },\n          error => {\n            const { message } = error.response.data;\n            this.setState({\n              error: message\n            });\n          }\n        );\n      }\n    });\n  };\n\n  render() {\n    const { user, editBox, error, avatar } = this.state;\n    const { getFieldProps, getFieldError } = this.props.form;\n    const genres = this.handleGenres();\n    return (\n      <Fragment>\n        {!editBox && (\n          <div className='category-screen'>\n            <div className='card horizontal profile-card'>\n              <div className='card-image profile-avatar'>\n                <img\n                  src={\n                    user.avatarURL\n                      ? user.avatarURL\n                      : 'https://profile.actionsprout.com/default.jpeg'\n                  }\n                  alt='profile-pic'\n                  className='profile-avatar-img'\n                />\n              </div>\n              <div className='card-stacked'>\n                <div className='card-content'>\n                  <h4>{user.name}</h4>\n                  <p>\n                    Daily goal: <strong>{user.pagesGoal} pages</strong>\n                  </p>\n                  <p>\n                    Genres: <strong>{genres}</strong>\n                  </p>\n                </div>\n                <SocialProfileBox />\n                <div className='profile-link'>\n                  <FontAwesomeIcon icon='cog' onClick={this.editProfile} />\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {editBox && (\n          <div className='category-screen'>\n            <div className='card-horizontal profile-card profile-card-edit'>\n              <div className='card-image profile-avatar-edit'>\n                <div className='profile-form-image'>\n                  <img\n                    src={\n                      avatar\n                        ? URL.createObjectURL(avatar)\n                        : user.avatarURL\n                        ? user.avatarURL\n                        : 'https://profile.actionsprout.com/default.jpeg'\n                    }\n                    alt='profile-pic'\n                    className='profile-avatar-img-edit'\n                  />\n                  <Upload\n                    className='upload-pic-button'\n                    name='logo'\n                    listType='picture'\n                    beforeUpload={file => {\n                      this.setState({ avatar: file });\n                      return false;\n                    }}\n                  >\n                    <Button htmlType='button'>\n                      <Icon type='upload' /> Change avatar\n                    </Button>\n                  </Upload>\n                </div>\n              </div>\n              <div className='card-stacked profile-info'>\n                <div className='card-content'>\n                  <form id='profile-form' onSubmit={this.submitProfile}>\n                    <div className='profile-form-group'>\n                      <label>Name</label>\n                      <InputField\n                        type='text'\n                        allowClear\n                        {...getFieldProps('name', {\n                          initialValue: user.name,\n                          validateFirst: true,\n                          validateTrigger: 'onblur',\n                          rules: [{ required: true, validator: checkName }]\n                        })}\n                        errors={getFieldError('name')}\n                      />\n                    </div>\n                    <div className='profile-form-group'>\n                      <label>Email</label>\n                      <InputField\n                        type='email'\n                        allowClear\n                        {...getFieldProps('email', {\n                          initialValue: user.email,\n                          validateFirst: true,\n                          validateTrigger: 'onblur',\n                          rules: [{ required: true, validator: checkEmail }]\n                        })}\n                        errors={getFieldError('email')}\n                      />\n                    </div>\n                    <div className='profile-form-group'>\n                      <label>Pages goal</label>\n                      <InputField\n                        type='number'\n                        allowClear\n                        {...getFieldProps('pagesGoal', {\n                          initialValue: user.pagesGoal,\n                          validateFirst: true,\n                          validateTrigger: 'onblur',\n                          rules: [{ required: true }]\n                        })}\n                      />\n                    </div>\n                    <p className='error'>{error}</p>\n                    <div className='profile-form-group card-action'>\n                      <div className='profile-group-submit'>\n                        <button\n                          onClick={this.cancelEdit}\n                          className='my-button cancel-button'\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          type='submit'\n                          className='my-button update-button'\n                        >\n                          Update\n                        </button>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default withAuthConsumer(createForm()(ProfileBox));\n","import React, { Component } from 'react';\nimport BookListItem from './BookListItem';\nimport userbookService from '../../services/userbook-service';\n\nexport default class ProfileBooksList extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount = () => {\n    userbookService.getProfileBooks(this.props.state).then(books => {\n      this.setState({\n        books: books\n      });\n    });\n  };\n\n  render() {\n    const books = this.state.books.map(book => {\n      return <BookListItem book={book} key={book.id} />;\n    });\n    return (\n      <div className='booklist-container'>\n        <ul className='collection'>{books}</ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ProfileBooksList from '../books/ProfileBooksList';\n\nexport default class PendingBooks extends Component {\n  render() {\n    return (\n      <div className='category-screen'>\n        <h2 className='category-title'>Books that you have pending</h2>\n        <ProfileBooksList state='pending' />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ProfileBooksList from '../books/ProfileBooksList';\n\nexport default class ReadBooks extends Component {\n  render() {\n    return (\n      <div className='category-screen'>\n        <h2 className='category-title'>Books that you have read</h2>\n        <ProfileBooksList state='read' />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ProfileBooksList from '../books/ProfileBooksList';\n\nexport default class ReadingBooks extends Component {\n  render() {\n    return (\n      <div className='category-screen'>\n        <h2 className='category-title'>Books that you are reading</h2>\n        <ProfileBooksList state='reading' />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ProfileBox from '../../components/profile/ProfileBox';\nimport PendingBooks from '../../components/profile/PendingBooks';\nimport ReadBooks from '../../components/profile/ReadBooks';\nimport ReadingBooks from '../../components/profile/ReadingBooks';\n\nexport default class Profile extends Component {\n  render() {\n    return (\n      <div className='screen-container'>\n        <ProfileBox />\n        <ReadingBooks />\n        <PendingBooks />\n        <ReadBooks />\n      </div>\n    );\n  }\n}\n","import React, { Fragment, Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport UserNavBar from '../../components/misc/UserNavBar';\nimport Explore from './Explore';\nimport Motivation from './Motivation';\nimport Friends from './Friends';\nimport BasicTopBar from '../../components/misc/BasicTopBar';\nimport BookDetail from './BookDetail';\nimport UserDetail from '../../components/friends/UserDetail';\nimport Profile from './Profile';\n\nexport default class UserContainer extends Component {\n  render() {\n    return (\n      <Fragment>\n        <BasicTopBar />\n        <div className='screen-wrapper'>\n          <Switch>\n            <Route exact path='/user/home' component={Motivation} />\n            <Route exact path='/user/explore' component={Explore} />\n            <Route exact path='/user/friends' component={Friends} />\n            <Route exact path='/user/profile' component={Profile} />\n            <Route path='/user/explore/:bookId' component={BookDetail} />\n            <Route path='/user/friends/:userId' component={UserDetail} />\n            <Redirect to='/user/explore' />\n          </Switch>\n        </div>\n        <UserNavBar />\n      </Fragment>\n    );\n  }\n}\n","import React from 'react'\n\nconst Error = ({code, message, level}) => (\n  <div className=\"row justify-content-center mt-3\">\n      <div className={`alert alert-${level} mt-5`} role=\"alert\">\n        <i className=\"fa fa-warning mr-1\"></i> <strong>{code}</strong> {message}\n    </div>\n  </div> \n)\n\nError.defaultProps = {\n  level: 'warning',\n  message: 'An error ocurred'\n}\n\nconst Forbidden = () => (<Error level=\"warning\" code=\"403\" message=\"You are not logged in to access this area\" />)\nconst NotFound = () => (<Error level=\"dark\" code=\"404\" message=\"Page not found\" />)\n\nexport { Error, Forbidden, NotFound }","import React from 'react';\nimport { AuthContext } from '../contexts/AuthStore';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <AuthContext.Consumer>\n      {({ isAuthenticated, user }) => (\n        <Route\n          {...rest}\n          render={props => {\n            if (isAuthenticated()) {\n              return <Component {...props} />;\n            }\n            return <Redirect to='/login' />;\n          }}\n        />\n      )}\n    </AuthContext.Consumer>\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { AuthContext } from '../contexts/AuthStore';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst LoggedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <AuthContext.Consumer>\n      {({ isAuthenticated, user }) => (\n        <Route\n          {...rest}\n          render={props => {\n            if (!isAuthenticated()) {\n              return <Component {...props} />;\n            }\n            return <Redirect to='/user/home' />;\n          }}\n        />\n      )}\n    </AuthContext.Consumer>\n  );\n};\n\nexport default LoggedRoute;\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Landing from './screens/Landing';\nimport Register from './screens/Register';\nimport Login from './screens/Login';\nimport UserContainer from './screens/user/UserContainer';\nimport { Forbidden, NotFound } from './screens/errors/Error';\nimport PrivateRoute from './guards/PrivateRoute';\nimport LoggedRoute from './guards/LoggedRoute';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Switch>\n          <LoggedRoute path='/register' component={Register} />\n          <LoggedRoute path='/login' component={Login} />\n          <Route exact path='/' component={Landing} />\n          <PrivateRoute path='/user' component={UserContainer} />\n          <Route exact path='/forbidden' component={Forbidden} />\n          <Route exact path='/not-found' component={NotFound} />\n          <Redirect to='/not-found' />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'antd/dist/antd.css';\nimport 'react-slick/dist/react-slick';\nimport './scss/style.scss';\n\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { AuthStore } from './contexts/AuthStore';\nimport * as serviceWorker from './serviceWorker';\n\nimport { PUBLIC_URL } from './ constants';\n\nReactDOM.render(\n  <Router basename={PUBLIC_URL}>\n    <AuthStore>\n      <App />\n    </AuthStore>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}