{"version":3,"sources":["images/storyland-white.png","images/storyland-main-dark.png","screens/Landing.js","contexts/AuthStore.js","services/base-http-service.js","services/auth-service.js","components/misc/BasicTopBar.js","utils/createForm.js","components/InputField.js","utils/validators.js","services/books-service.js","components/RegisterBookItem.js","components/RegisterForm.js","screens/Register.js","services/user-service.js","components/LoginForm.js","screens/Login.js","components/misc/UserNavBar.js","components/explore/SearchBar.js","components/misc/Loading.js","components/books/BookListItem.js","components/books/SearchBooksList.js","utils/sliderSettings.js","components/books/BookItem.js","components/explore/ExploreBestRatedBooks.js","components/explore/ExploreRelatedBooks.js","components/explore/ExploreLatestBooks.js","components/explore/ExploreBooksByGenre.js","screens/user/Explore.js","services/goals-service.js","components/motivation/ReadToday.js","components/motivation/DateChart.js","screens/user/Motivation.js","components/friends/UserItem.js","components/friends/UserList.js","screens/user/Friends.js","screens/user/FollowList.js","services/userbook-service.js","screens/user/BookDetail.js","components/friends/FriendProfileBox.js","components/friends/ReadingBookItem.js","components/friends/RelatedFriendBooks.js","components/friends/UserDetail.js","components/profile/SocialProfileBox.js","components/profile/ProfileBox.js","components/books/ProfileBooksList.js","components/profile/PendingBooks.js","components/profile/ReadBooks.js","components/profile/ReadingBooks.js","screens/user/Profile.js","guards/LoggedRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Landing","react_default","a","createElement","className","src","logoWhite","alt","react_router_dom","to","CURRENT_USER_KEY","AuthContext","React","createContext","AuthStore","state","user","JSON","parse","localStorage","getItem","handleUserChange","_this","setState","email","setItem","stringify","removeItem","isAuthenticated","Provider","value","this","onUserChanged","props","children","Component","withAuthConsumer","Consumer","storeProps","Object","assign","http","axios","create","baseURL","process","withCredentials","auth_service","login","post","then","response","data","register","logout","updateProfile","FormData","keys","forEach","prop","password","append","put","res","Promise","resolve","library","add","faArrowLeft","faSignOutAlt","BasicTopBar","handleLogout","authService","history","push","handleBack","goBack","id","onClick","react_fontawesome_index_es","icon","react","withRouter","customCreateForm","createDOMForm","validateMessages","required","field","InputField","_this$props","onChange","errors","onblur","type","allowClear","hasErrors","length","input","onBlur","map","error","index","key","defaultProps","emailPattern","passwordPattern","checkName","_","cb","Error","checkEmail","test","checkPassword","books_service","getRegisterBooks","get","getAllBooks","getRelatedBooks","genres","includes","replace","concat","getBestRatedBooks","rating","getLatestBooks","year","getSearchedBook","search","getOneBook","book","postCoverBook","file","RegisterBookItem","isActive","bookClicked","imageLink","title","RegisterForm","registerBooks","favBooks","secondScreen","isRegistered","postButton","submitFirstForm","event","form","preventDefault","validateFields","fields","handleRegisterBooks","submitRegister","_this$state","fGenres","elem","names","unique","i","removeDups","slice","favGenres","message","bookService","books","handleCoverChange","toConsumableArray","filter","handlePostButton","_this2","_this$props$form","getFieldProps","getFieldError","_this$state2","isFavBook","RegisterBookItem_RegisterBookItem","react_router","onSubmit","components_InputField","name","validateFirst","validateTrigger","rules","validator","mail","disabled","createForm","Register","misc_BasicTopBar","components_RegisterForm","user_service","getUser","getUsers","getSocialUsers","followUser","unfollowUser","delete","LoginForm","submitLogin","userService","fullUser","Login","components_LoginForm","faHome","faCompass","faUsers","faUserCircle","UserNavBar","activeClassName","SearchBar","_ref","onSearch","uploadCover","placeholder","e","target","upload","listType","beforeUpload","es_button","htmlType","style","fontSize","Loading","BookListItem","_props$book","authors","join","handleAuthors","SearchBooksList","books_BookListItem","sliderSettings","infinite","speed","slidesToShow","swipeToSlide","variableWidth","responsive","breakpoint","settings","slidesToScroll","BookItem","showBadge","showImgBadge","_this$props$book","badge","onLoad","faStar","ExploreBestRatedBooks","loading","componentDidMount","booksService","sort","Math","random","BookItem_BookItem","Fragment","googleRating","misc_Loading","lib_default","substr","indexOf","ExploreLatestBooks","Date","publishedDate","getMonth","getFullYear","ExploreRelatedBooks","genre","handleSelectChange","handleGenreBooks","es_select","defaultValue","Option","Explore","coverBook","debounce","closeCoverSearch","bind","SearchBooksList_SearchBooksList","explore_ExploreRelatedBooks","ExploreBestRatedBooks_ExploreBestRatedBooks","ExploreLatestBooks_ExploreLatestBooks","ExploreBooksByGenre","goals_service","createGoal","goal","getGoals","getLastGoals","days","pagesDay","handlePagesChange","pages","handlePagesSubmit","goalsService","pagesGoal","congratsBox","valuePages","goals","todayDate","goalDate","updatedAt","day","getDate","month","period","pagesRead","handlePeriodChange","periodSelect","handleDataGraphic","unshiftToData","x","y","unshift","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","date","DateTime","fromJSDate","monthShort","err","return","setDataGraphic","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","weekdayShort","reduce","acc","componentDidUpdate","dataArr","responsiveLine","es","margin","top","right","bottom","left","curve","axisTop","axisRight","axisBottom","axisLeft","enableGridY","enableGridX","lineWidth","dotSize","colors","dotColor","dotLabelYOffset","isInteractive","enableStackTooltip","animate","motionStiffness","motionDamping","build_default","start","duration","end","redraw","Motivation","congratsText","handleCongratsText","isAchievedGoal","closeCongratsBox","refreshChart","motivation_DateChart","motivation_ReadToday","UserItem","_this$state$user","avatarURL","href","users","asyncToGenerator","regenerator_default","mark","_callee","bookReading","wrap","_context","prev","userbooks","find","abrupt","readingBook","image","stop","_x","apply","arguments","all","UserItem_UserItem","Friends","friends_UserList","followstate","match","params","followPromises","following","followed","rbook","followers","_ref2","_callee2","_context2","follower","_x2","userbook_service","getProfileBooks","getStateBook","createStateBook","Panel","Collapse","BookDetail","relatedBooks","handleStateButton","userbooksService","formatDate","toLocaleDateString","bookId","slicedToArray","prevProps","_ref3","_ref4","document","querySelector","scrollTop","isbn","collapse","bordered","defaultActiveKey","expandIcon","_ref5","rotate","header","theme","pageCount","description","FriendProfileBox","handleGenres","friend","_this$props$friend","userId","followButton","some","handleFollow","handleUnfollow","ReadingBookItem","friendName","RelatedFriendBooks","relation","objectSpread","friends_FriendProfileBox","ReadingBookItem_ReadingBookItem","RelatedFriendBooks_RelatedFriendBooks","social","faCog","ProfileBox","editBox","avatar","editProfile","cancelEdit","submitProfile","profile_SocialProfileBox","URL","createObjectURL","initialValue","ProfileBooksList","userbookService","PendingBooks","ProfileBooksList_ProfileBooksList","ReadBooks","ReadingBooks","Profile","profile_ProfileBox","ReadingBooks_ReadingBooks","PendingBooks_PendingBooks","ReadBooks_ReadBooks","LoggedRoute","component","rest","objectWithoutProperties","render","isUser","guards_LoggedRoute","path","exact","FollowList","UserDetail","UserNavBar_UserNavBar","Boolean","window","location","hostname","ReactDOM","basename","AuthStore_AuthStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2596f2e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/storyland-white.7075a412.png\";","module.exports = __webpack_public_path__ + \"static/media/storyland-main-dark.e6a93caf.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logoWhite from '../images/storyland-white.png';\n\nconst Landing = () => {\n  return (\n    <div className='landing-web'>\n      <div className='landing-info'>\n        <div className='landing-logo'>\n          <img src={logoWhite} alt='storyland-app' />\n        </div>\n        <div className='landing-buttons'>\n          <div>\n            <Link to='/register'>\n              <button className='my-button reg-button'>Register</button>\n            </Link>\n          </div>\n          <div>\n            <Link to='/login'>\n              <button className='my-button log-button'>Login</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { Component } from 'react';\n\nconst CURRENT_USER_KEY = 'current-user';\n\nconst AuthContext = React.createContext();\n\nclass AuthStore extends Component {\n  state = {\n    user: JSON.parse(localStorage.getItem(CURRENT_USER_KEY) || '{}')\n  };\n\n  handleUserChange = user => {\n    this.setState({ user: user });\n    if (user && user.email) {\n      localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(user));\n    } else {\n      localStorage.removeItem(CURRENT_USER_KEY);\n    }\n  };\n\n  isAuthenticated = () => this.state.user && this.state.user.email;\n\n  render() {\n    return (\n      <AuthContext.Provider\n        value={{\n          user: this.state.user,\n          onUserChanged: this.handleUserChange,\n          isAuthenticated: this.isAuthenticated\n        }}\n      >\n        {this.props.children}\n      </AuthContext.Provider>\n    );\n  }\n}\n\nconst withAuthConsumer = Component => {\n  return props => (\n    <AuthContext.Consumer>\n      {storeProps => <Component {...props} {...storeProps} />}\n    </AuthContext.Consumer>\n  );\n};\n\nexport { AuthContext, AuthStore, withAuthConsumer };\n","import axios from 'axios';\n\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_baseURL,\n  withCredentials: true\n});\n\nexport default http;\n","import http from './base-http-service';\n\nconst login = user => http.post('/login', user).then(response => response.data);\n\nconst register = user =>\n  http.post('/register', user).then(response => response.data);\n\nconst logout = () => http.post('/logout').then(response => response.data);\n\nconst updateProfile = user => {\n  const data = new FormData();\n  Object.keys(user).forEach(prop => {\n    if (prop === 'password' && user.password === '') return;\n    data.append(prop, user[prop]);\n  });\n  return http\n    .put('/users/profile', data)\n    .then(res => Promise.resolve(res.data));\n};\n\nexport default {\n  login,\n  register,\n  logout,\n  updateProfile\n};\n","import React, { Fragment, Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport authService from '../../services/auth-service';\nimport { withRouter } from 'react-router-dom';\nimport logoWhite from '../../images/storyland-main-dark.png';\n\nlibrary.add(faArrowLeft);\nlibrary.add(faSignOutAlt);\n\nclass BasicTopBar extends Component {\n  handleLogout = () => {\n    authService.logout().then(() => {\n      const { history } = this.props;\n      this.props.onUserChanged({});\n      history.push('/login');\n    });\n  };\n\n  handleBack = () => {\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { user } = this.props;\n    return (\n      <nav className='basic-nav'>\n        <div className='nav-wrapper basic-nav-list'>\n          <ul id='nav-mobile' className='left'>\n            <li\n              className='basic-nav-item basic-nav-item-back'\n              onClick={this.handleBack}\n            >\n              <FontAwesomeIcon icon='arrow-left' />\n            </li>\n          </ul>\n          <Link className='brand-logo center' to='/home'>\n            <img\n              className='basic-nav-logo'\n              src={logoWhite}\n              alt='storyland-app'\n            />\n          </Link>\n          <ul id='nav-mobile' className='right right-register-topbar'>\n            {!user.email && (\n              <Fragment>\n                <li className='basic-nav-item'>\n                  <Link className='nav-link' to='/register'>\n                    Register\n                  </Link>\n                </li>\n                <li className='basic-nav-item'>\n                  <Link className='nav-link' to='/login'>\n                    Login\n                  </Link>\n                </li>\n              </Fragment>\n            )}\n            {user.email && (\n              <Fragment>\n                <li\n                  className='basic-nav-item basic-nav-item-back'\n                  onClick={this.handleLogout}\n                >\n                  <FontAwesomeIcon icon='sign-out-alt' />\n                </li>\n              </Fragment>\n            )}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default withAuthConsumer(withRouter(BasicTopBar));\n","import createDOMForm from 'rc-form/lib/createDOMForm';\n\nconst customCreateForm = () =>\n  createDOMForm({\n    validateMessages: {\n      required(field) {\n        return 'Required field';\n      }\n    }\n  });\n\nexport { customCreateForm as createForm };\n","import React, { Component } from 'react';\nimport { Input } from 'antd';\n\nclass InputField extends Component {\n  render() {\n    const {\n      onChange,\n      value,\n      errors,\n      onblur,\n      className,\n      type,\n      allowClear\n    } = this.props;\n    const hasErrors = errors && errors.length > 0;\n    return (\n      <div className={className}>\n        <Input\n          onChange={onChange}\n          value={value}\n          {...(type ? { type } : null)}\n          {...(allowClear ? { allowClear } : null)}\n          {...(onblur ? { onBlur: onblur } : null)}\n        />\n        {hasErrors &&\n          errors.map((error, index) => (\n            <p className='error' key={index}>\n              {error}\n            </p>\n          ))}\n      </div>\n    );\n  }\n}\n\nInputField.defaultProps = {\n  className: ''\n};\n\nexport default InputField;\n","const emailPattern = /(.+)@(.+){2,}\\.(.+){2,}/i;\nconst passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d){6,}/;\n\nexport const isEmail = email => email && emailPattern.test(email);\nexport const isGoodPassword = password =>\n  password && passwordPattern.test(password);\n\nexport const checkName = (_, value, cb) =>\n  value && value.length >= 3\n    ? cb()\n    : cb(new Error('Name needs at least 3 chars'));\n\nexport const checkEmail = (_, value, cb) =>\n  isEmail(value) ? cb() : cb(new Error('Invalid mail'));\n\nexport const checkPassword = (_, value, cb) =>\n  isGoodPassword(value)\n    ? cb()\n    : cb(new Error('Password needs uppercase, lowercase and numbers'));\n","import http from './base-http-service';\n\nconst getRegisterBooks = () =>\n  http.get('/books/register').then(response => response.data);\n\nconst getAllBooks = () => http.get('/books').then(response => response.data);\n\nconst getRelatedBooks = genres => {\n  if (genres.includes('&')) {\n    genres = genres.replace('&', '@');\n  }\n  return http.get(`/books?genres=${genres}`).then(response => response.data);\n};\n\nconst getBestRatedBooks = rating =>\n  http.get(`/books?rating=${rating}`).then(response => response.data);\n\nconst getLatestBooks = year =>\n  http.get(`/books?year=${year}`).then(response => response.data);\n\nconst getSearchedBook = search =>\n  http.post(`/books/${search}`).then(response => response.data);\n\nconst getOneBook = book =>\n  http.get(`/books/${book}`).then(response => response.data);\n\nconst postCoverBook = file => {\n  const data = new FormData();\n  data.append('cover', file);\n  return http\n    .post('/books/scancover', data)\n    .then(res => Promise.resolve(res.data));\n};\n\nexport default {\n  getRegisterBooks,\n  getAllBooks,\n  getRelatedBooks,\n  getBestRatedBooks,\n  getLatestBooks,\n  getSearchedBook,\n  getOneBook,\n  postCoverBook\n};\n","import React, { Component } from 'react';\n\nexport default class RegisterBookItem extends Component {\n  render() {\n    const { book, isActive } = this.props;\n    return (\n      <div\n        className='register-book-item'\n        onClick={() => this.props.bookClicked(book)}\n      >\n        <img\n          className={isActive ? 'register-book-active' : ''}\n          src={book.imageLink}\n          alt={book.title}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createForm } from '../utils/createForm';\nimport InputField from './InputField';\nimport { checkName, checkEmail, checkPassword } from '../utils/validators';\nimport { Icon } from 'antd';\nimport authService from '../services/auth-service';\nimport bookService from '../services/books-service';\nimport RegisterBookItem from './RegisterBookItem';\n\nclass RegisterForm extends Component {\n  state = {\n    user: {},\n    registerBooks: [],\n    favBooks: [],\n    error: '',\n    secondScreen: false,\n    isRegistered: false,\n    postButton: false\n  };\n\n  submitFirstForm = event => {\n    const { form } = this.props;\n    event.preventDefault();\n    form.validateFields((errors, fields) => {\n      const hasErrors = errors && Object.keys(errors).length > 0;\n      if (!hasErrors)\n        this.setState({\n          user: fields,\n          secondScreen: true\n        });\n      this.handleRegisterBooks();\n    });\n  };\n\n  submitRegister = event => {\n    let { user, favBooks } = this.state;\n    event.preventDefault();\n    if (favBooks.length > 2) {\n      let fGenres = favBooks.map(elem => elem.genres[0]);\n      fGenres = removeDups(fGenres);\n      fGenres = fGenres.slice(0, 3);\n      user.favGenres = fGenres;\n      authService.register(user).then(\n        user => {\n          this.setState({\n            isRegistered: true\n          });\n        },\n        error => {\n          const { message } = error.response.data;\n          this.setState({\n            error: message,\n            secondScreen: false\n          });\n        }\n      );\n    }\n\n    function removeDups(names) {\n      let unique = {};\n      names.forEach(function(i) {\n        if (!unique[i]) {\n          unique[i] = true;\n        }\n      });\n      return Object.keys(unique);\n    }\n  };\n\n  handleRegisterBooks = () => {\n    bookService.getRegisterBooks().then(books => {\n      this.setState({\n        registerBooks: books\n      });\n    });\n  };\n\n  handleCoverChange = book => {\n    if (this.state.favBooks.includes(book)) {\n      this.setState(\n        {\n          favBooks: [...this.state.favBooks].filter(elem => elem !== book)\n        },\n        () => {\n          this.handlePostButton();\n        }\n      );\n    } else {\n      this.setState({ favBooks: [...this.state.favBooks, book] }, () => {\n        this.handlePostButton();\n      });\n    }\n  };\n\n  handlePostButton = () => {\n    if (this.state.favBooks.length > 2) {\n      this.setState({ postButton: true });\n    } else {\n      this.setState({ postButton: false });\n    }\n  };\n\n  render() {\n    const { getFieldProps, getFieldError } = this.props.form;\n    const {\n      user,\n      error,\n      secondScreen,\n      isRegistered,\n      favBooks,\n      postButton\n    } = this.state;\n    const registerBooks = this.state.registerBooks.map(elem => {\n      let isFavBook = favBooks.includes(elem) ? true : false;\n      return (\n        <RegisterBookItem\n          book={elem}\n          key={elem.id}\n          bookClicked={this.handleCoverChange}\n          isActive={isFavBook}\n        />\n      );\n    });\n    if (isRegistered) {\n      return <Redirect to='/login' />;\n    }\n    return (\n      <div className='reg-container'>\n        {!this.state.secondScreen && (\n          <form onSubmit={this.submitFirstForm} className='reg-form'>\n            <div className='form-item'>\n              <Icon type='user' />\n              <label>Name</label>\n              <InputField\n                value={user.name}\n                type='text'\n                allowClear\n                {...getFieldProps('name', {\n                  validateFirst: true,\n                  validateTrigger: 'onblur',\n                  rules: [{ required: true, validator: checkName }]\n                })}\n                errors={getFieldError('name')}\n              />\n            </div>\n            <div className='form-item'>\n              <Icon type='mail' />\n              <label>Email</label>\n              <InputField\n                value={user.mail}\n                type='email'\n                allowClear\n                {...getFieldProps('email', {\n                  validateFirst: true,\n                  validateTrigger: 'onblur',\n                  rules: [{ required: true, validator: checkEmail }]\n                })}\n                errors={getFieldError('email')}\n              />\n            </div>\n            <div className='form-item'>\n              <Icon type='lock' />\n              <label>Password</label>\n              <InputField\n                type='password'\n                allowClear\n                {...getFieldProps('password', {\n                  validateFirst: true,\n                  validateTrigger: 'onblur',\n                  rules: [{ required: true, validator: checkPassword }]\n                })}\n                errors={getFieldError('password')}\n              />\n            </div>\n            <p className='error'>{error}</p>\n            <div className='form-item'>\n              <div className='form-item-submit'>\n                <button type='submit' className='my-button next-button'>\n                  Next\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n\n        {secondScreen === true && (\n          <Fragment>\n            <h4 className='choose-register-title'>\n              Choose 3 or more books that you like\n            </h4>\n            <div className='register-books-container'>{registerBooks}</div>\n            <div className='form-item-submit'>\n              {!postButton && (\n                <button\n                  type='submit'\n                  className='my-button post-button disabled-button'\n                  onClick={this.submitRegister}\n                  disabled\n                >\n                  Register\n                </button>\n              )}\n              {postButton && (\n                <button\n                  type='submit'\n                  className='my-button post-button'\n                  onClick={this.submitRegister}\n                >\n                  Register\n                </button>\n              )}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default createForm()(RegisterForm);\n","import React, { Fragment } from 'react';\nimport BasicTopBar from '../components/misc/BasicTopBar';\nimport RegisterForm from '../components/RegisterForm';\n\nconst Register = () => {\n  return (\n    <Fragment>\n      <BasicTopBar />\n      <div className='screen-wrapper'>\n        <div className='form-container'>\n          <h1 className='reg-title'>Register</h1>\n          <RegisterForm />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","import http from './base-http-service';\n\nconst getUser = id =>\n  http.get(`/users/${id}/profile`).then(response => response.data);\n\nconst getUsers = () => http.get(`/users/`).then(response => response.data);\n\nconst getSocialUsers = id =>\n  http.get(`/users/${id}/friends`).then(response => response.data);\n\nconst followUser = id =>\n  http.post(`/users/${id}/follow`).then(response => response.data);\n\nconst unfollowUser = id =>\n  http.delete(`/users/${id}/follow`).then(response => response.data);\n\nexport default {\n  getUser,\n  getUsers,\n  getSocialUsers,\n  followUser,\n  unfollowUser\n};\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createForm } from '../utils/createForm';\nimport InputField from './InputField';\nimport { checkEmail, checkPassword } from '../utils/validators';\nimport { Icon } from 'antd';\nimport authService from '../services/auth-service';\nimport { withAuthConsumer } from '../contexts/AuthStore';\nimport userService from '../services/user-service';\n\nclass LoginForm extends Component {\n  state = {\n    error: '',\n    isAuthenticated: false\n  };\n\n  submitLogin = event => {\n    const { form } = this.props;\n    event.preventDefault();\n    form.validateFields((errors, fields) => {\n      const hasErrors = errors && Object.keys(errors).length > 0;\n      if (!hasErrors) {\n        authService.login(fields).then(\n          user => {\n            this.setState({ isAuthenticated: true }, () => {\n              userService\n                .getUser(user.id)\n                .then(fullUser => this.props.onUserChanged(fullUser));\n              this.props.onUserChanged(user);\n            });\n          },\n          error => {\n            const { message } = error.response.data;\n            this.setState({\n              error: message\n            });\n          }\n        );\n      }\n    });\n  };\n\n  render() {\n    const { getFieldProps, getFieldError } = this.props.form;\n    const { error, isAuthenticated } = this.state;\n    if (isAuthenticated) {\n      return <Redirect to='/home' />;\n    }\n    return (\n      <div className='reg-container'>\n        <form onSubmit={this.submitLogin} className='reg-form'>\n          <div className='form-item'>\n            <Icon type='mail' />\n            <label>Email</label>\n            <InputField\n              type='email'\n              allowClear\n              {...getFieldProps('email', {\n                validateFirst: true,\n                validateTrigger: 'onblur',\n                rules: [{ required: true, validator: checkEmail }]\n              })}\n              errors={getFieldError('email')}\n            />\n          </div>\n          <div className='form-item'>\n            <Icon type='lock' />\n            <label>Password</label>\n            <InputField\n              type='password'\n              allowClear\n              {...getFieldProps('password', {\n                validateFirst: true,\n                validateTrigger: 'onblur',\n                rules: [{ required: true, validator: checkPassword }]\n              })}\n              errors={getFieldError('password')}\n            />\n          </div>\n          <p className='error'>{error}</p>\n          <div className='form-item'>\n            <div className='form-item-submit'>\n              <button type='submit' className='my-button next-button'>\n                Log in\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(createForm()(LoginForm));\n","import React, { Fragment } from 'react';\nimport BasicTopBar from '../components/misc/BasicTopBar';\nimport LoginForm from '../components/LoginForm';\n\nconst Login = () => {\n  return (\n    <Fragment>\n      <BasicTopBar />\n      <div className='screen-wrapper'>\n        <div className='form-container'>\n          <h1 className='reg-title'>Login</h1>\n          <LoginForm />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { faCompass } from '@fortawesome/free-solid-svg-icons';\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faHome);\nlibrary.add(faCompass);\nlibrary.add(faUsers);\nlibrary.add(faUserCircle);\n\nexport default class UserNavBar extends Component {\n  render() {\n    return (\n      <div className='usernavbar'>\n        <ul className='usernavbar-container'>\n          <li>\n            <NavLink className='nav-link' activeClassName='active' to='/home'>\n              <div className='usernavbar-item'>\n                <FontAwesomeIcon icon='home' />\n              </div>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              className='nav-link'\n              activeClassName='active'\n              to='/explore'\n            >\n              <div className='usernavbar-item'>\n                <FontAwesomeIcon icon='compass' />\n              </div>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              className='nav-link'\n              activeClassName='active'\n              to='/friends'\n            >\n              <div className='usernavbar-item'>\n                <FontAwesomeIcon icon='users' />\n              </div>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              className='nav-link'\n              activeClassName='active'\n              to='/profile'\n            >\n              <div className='usernavbar-item'>\n                <FontAwesomeIcon icon='user-circle' />\n              </div>\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Input, Upload, Button, Icon } from 'antd';\n\nexport default ({ onSearch, uploadCover }) => (\n  <div className='field explore-search-bar'>\n    <Input\n      className='input'\n      type='text'\n      placeholder='Search'\n      allowClear\n      onChange={e => onSearch(e.target.value)}\n    />\n    <Upload\n      className='upload-cover-book'\n      name='cover'\n      listType='picture'\n      beforeUpload={file => {\n        uploadCover(file);\n        return false;\n      }}\n    >\n      <Button htmlType='button'>\n        <Icon type='camera' style={{ fontSize: '20px' }} />\n      </Button>\n    </Upload>\n  </div>\n);\n","import React from 'react';\n\nconst Loading = () => {\n  return (\n    <div className='preloader-wrapper medium active'>\n      <div className='spinner-layer  spinner-yellow-only'>\n        <div className='circle-clipper left'>\n          <div className='circle' />\n        </div>\n        <div className='gap-patch'>\n          <div className='circle' />\n        </div>\n        <div className='circle-clipper right'>\n          <div className='circle' />\n        </div>\n      </div>\n\n      <div className='spinner-layer  spinner-yellow-only'>\n        <div className='circle-clipper left'>\n          <div className='circle' />\n        </div>\n        <div className='gap-patch'>\n          <div className='circle' />\n        </div>\n        <div className='circle-clipper right'>\n          <div className='circle' />\n        </div>\n      </div>\n\n      <div className='spinner-layer  spinner-yellow-only'>\n        <div className='circle-clipper left'>\n          <div className='circle' />\n        </div>\n        <div className='gap-patch'>\n          <div className='circle' />\n        </div>\n        <div className='circle-clipper right'>\n          <div className='circle' />\n        </div>\n      </div>\n\n      <div className='spinner-layer  spinner-yellow-only'>\n        <div className='circle-clipper left'>\n          <div className='circle' />\n        </div>\n        <div className='gap-patch'>\n          <div className='circle' />\n        </div>\n        <div className='circle-clipper right'>\n          <div className='circle' />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BookListItem = props => {\n  const handleAuthors = () => {\n    if (props.book.authors) {\n      let authors = [props.book.authors];\n      if (authors.length === 1) authors = authors[0];\n      if (authors.length > 1) authors = authors.join(' & ');\n      return authors;\n    } else {\n      return '';\n    }\n  };\n\n  const { imageLink, title, id } = props.book;\n  const authors = handleAuthors();\n\n  return (\n    <li className='collection-item avatar'>\n      <div>\n        <img src={imageLink} alt={title} className='avatar-img-book' />\n      </div>\n      <div className='avatar-info-book'>\n        <Link to={`/explore/${id}`}>\n          <span className='title'>\n            <strong>{title}</strong>\n          </span>\n          <p className='authors-item'>{authors}</p>\n        </Link>\n      </div>\n    </li>\n  );\n};\n\nexport default BookListItem;\n","import React, { Component } from 'react';\nimport BookListItem from './BookListItem';\n\nexport default class SearchBooksList extends Component {\n  render() {\n    let books = [];\n    if (this.props.books !== '') {\n      books = this.props.books.map(book => {\n        return <BookListItem book={book} key={book.id} />;\n      });\n    } else {\n      books = (\n        <li className='collection-item avatar'>\n          <span className='title'>\n            <strong>Not books found</strong>\n          </span>\n        </li>\n      );\n    }\n\n    return (\n      <div className='booklist-container'>\n        <ul className='collection'>{books}</ul>\n      </div>\n    );\n  }\n}\n","const sliderSettings = {\n  infinite: true,\n  speed: 500,\n  slidesToShow: 10,\n  swipeToSlide: true,\n  variableWidth: true,\n  responsive: [\n    {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 2\n      }\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 2\n      }\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1\n      }\n    }\n  ]\n};\n\nexport default sliderSettings;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class BookItem extends Component {\n  state = {\n    showBadge: false\n  };\n\n  showImgBadge = () => {\n    this.setState({ showBadge: true });\n  };\n\n  render() {\n    const { imageLink, title, id } = this.props.book;\n    const { badge } = this.props;\n    const { showBadge } = this.state;\n\n    return (\n      <li className='book-card card'>\n        <Link to={`/explore/${id}`}>\n          <figure className='card-image'>\n            <img\n              onLoad={this.showImgBadge}\n              className='book-cover'\n              src={imageLink}\n              alt={title}\n            />\n            {showBadge && <span className='badge book-badge'>{badge}</span>}\n          </figure>\n        </Link>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport BookItem from '../books/BookItem';\nimport Loading from '../misc/Loading';\n\nlibrary.add(faStar);\n\nexport default class ExploreBestRatedBooks extends Component {\n  state = {\n    books: [],\n    loading: false\n  };\n\n  componentDidMount = () => {\n    this.setState({ loading: true }, () => {\n      booksService.getBestRatedBooks(5).then(response => {\n        this.setState({\n          books: response,\n          loading: false\n        });\n      });\n    });\n  };\n\n  render() {\n    const books = this.state.books\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        return (\n          <BookItem\n            key={book.id}\n            book={book}\n            badge={\n              <React.Fragment>\n                {book.googleRating} <FontAwesomeIcon icon='star' />\n              </React.Fragment>\n              // `${book.googleRating}${' '}` && <FontAwesomeIcon icon='star' />\n            }\n          />\n        );\n      });\n    const { loading } = this.state;\n    return (\n      <div className='category-screen'>\n        <h4 className='category-title'>Best rated books</h4>\n        {loading && <Loading />}\n        {!loading && (\n          <ul className='book-container'>\n            <Slider {...sliderSettings}>{books}</Slider>\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport BookItem from '../books/BookItem';\nimport Loading from '../misc/Loading';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\n\nclass ExploreRelatedBooks extends Component {\n  state = {\n    books: [],\n    loading: false\n  };\n\n  componentDidMount = () => {\n    const genres = this.props.user.favGenres.join(',');\n    this.setState({ loading: true }, () => {\n      booksService.getRelatedBooks(genres).then(response => {\n        this.setState({\n          books: response,\n          loading: false\n        });\n      });\n    });\n  };\n\n  render() {\n    const books = this.state.books\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        let badge = book.genres[0];\n        if (badge.includes(' ')) badge = badge.substr(0, badge.indexOf(' '));\n        return <BookItem key={book.id} book={book} badge={badge} />;\n      });\n    const { loading } = this.state;\n    return (\n      <div className='category-screen'>\n        <h4 className='category-title'>Books that you will like</h4>\n        {loading && <Loading />}\n        {!loading && (\n          <ul className='book-container'>\n            <Slider {...sliderSettings}>{books}</Slider>\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(ExploreRelatedBooks);\n","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport BookItem from '../books/BookItem';\nimport Loading from '../misc/Loading';\n\nexport default class ExploreLatestBooks extends Component {\n  state = {\n    books: [],\n    loading: false\n  };\n\n  componentDidMount = () => {\n    this.setState({ loading: true }, () => {\n      booksService.getLatestBooks(2019).then(response => {\n        this.setState({\n          books: response,\n          loading: false\n        });\n      });\n    });\n  };\n\n  render() {\n    const books = this.state.books\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        const badge = `${new Date(book.publishedDate).getMonth() +\n          1}/${new Date(book.publishedDate).getFullYear()}`;\n        return <BookItem key={book.id} book={book} badge={badge} />;\n      });\n    const { loading } = this.state;\n    return (\n      <div className='category-screen'>\n        <h4 className='category-title'>Latest books</h4>\n        {loading && <Loading />}\n        {!loading && (\n          <ul className='book-container'>\n            <Slider {...sliderSettings}>{books}</Slider>\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport { Select } from 'antd';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport BookItem from '../books/BookItem';\nimport Loading from '../misc/Loading';\n\nclass ExploreRelatedBooks extends Component {\n  state = {\n    books: [],\n    genre: '',\n    loading: false\n  };\n\n  handleSelectChange = event => {\n    const genre = event;\n    this.handleGenreBooks(genre);\n  };\n\n  handleGenreBooks = genre => {\n    this.setState({ loading: true }, () => {\n      booksService.getRelatedBooks(genre).then(response => {\n        this.setState({\n          books: response,\n          loading: false\n        });\n      });\n    });\n  };\n\n  componentDidMount = () => {\n    this.handleGenreBooks('Fiction');\n  };\n\n  render() {\n    const books = this.state.books\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        let badge = book.genres[0];\n        if (badge.includes(' ')) badge = badge.substr(0, badge.indexOf(' '));\n        return <BookItem key={book.id} book={book} badge={badge} />;\n      });\n    const { loading } = this.state;\n    return (\n      <div className='category-screen'>\n        <div className='genre-input'>\n          <h4 className='category-title'>Books by genre</h4>\n          <Select defaultValue='Fiction' onChange={this.handleSelectChange}>\n            <Select.Option value={`Biography & Autobiography`}>\n              Biography & Autobiography\n            </Select.Option>\n            <Select.Option value={`Business & Economics`}>\n              Business & Economics\n            </Select.Option>\n            <Select.Option value='Fiction'>Fiction</Select.Option>\n            <Select.Option value={`Health & Fitness`}>\n              Health & Fitness\n            </Select.Option>\n            <Select.Option value='Juvenile Nonfiction'>\n              Juvenile Nonfiction\n            </Select.Option>\n            <Select.Option value='History'>History</Select.Option>\n            <Select.Option value='Literary Collections'>\n              Literary Collections\n            </Select.Option>\n            <Select.Option value='Performing Arts'>\n              Performing Arts\n            </Select.Option>\n            <Select.Option value='Political Science'>\n              Political Science\n            </Select.Option>\n            <Select.Option value='Self-Help'>Self-Help</Select.Option>\n            <Select.Option value='Social Science'>Social Science</Select.Option>\n          </Select>\n        </div>\n        {loading && <Loading />}\n        {!loading && (\n          <ul className='book-container'>\n            <Slider {...sliderSettings}>{books}</Slider>\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ExploreRelatedBooks;\n","import React, { Component, Fragment } from 'react';\nimport booksService from '../../services/books-service';\nimport debounce from 'lodash/debounce';\nimport { Icon } from 'antd';\nimport SearchBar from '../../components/explore/SearchBar';\nimport Loading from '../../components/misc/Loading';\nimport SearchBooksList from '../../components/books/SearchBooksList';\nimport ExploreBestRatedBooks from '../../components/explore/ExploreBestRatedBooks';\nimport ExploreRelatedBooks from '../../components/explore/ExploreRelatedBooks';\nimport ExploreLatestBooks from '../../components/explore/ExploreLatestBooks';\nimport ExploreBooksByGenre from '../../components/explore/ExploreBooksByGenre';\n\nclass Explore extends Component {\n  state = {\n    books: [],\n    search: '',\n    coverBook: false,\n    loading: false\n  };\n\n  onSearch = debounce(search => {\n    this.setState({ search });\n    if (search.length > 3) {\n      booksService.getSearchedBook(search).then(books => {\n        this.setState({ books });\n      });\n    }\n  }, 1000);\n\n  uploadCover = file => {\n    this.setState({ loading: true });\n    booksService.postCoverBook(file).then(books => {\n      this.setState({ books, coverBook: true, loading: false });\n    });\n  };\n\n  closeCoverSearch = () => {\n    this.setState({ search: '', coverBook: false });\n  };\n\n  render() {\n    const { books, search, coverBook, loading } = this.state;\n    return (\n      <div className='screen-container'>\n        <SearchBar\n          onSearch={this.onSearch.bind(this)}\n          uploadCover={this.uploadCover.bind(this)}\n        />\n        {(search || coverBook) && <SearchBooksList books={books} />}\n        {coverBook && (\n          <Icon\n            type='close-circle'\n            className='close-cover-search'\n            onClick={this.closeCoverSearch}\n          />\n        )}\n        {loading && <Loading />}\n        {!search && !coverBook && !loading && (\n          <Fragment>\n            <ExploreRelatedBooks />\n            <ExploreBestRatedBooks />\n            <ExploreLatestBooks />\n            <ExploreBooksByGenre />\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import http from './base-http-service';\n\nconst createGoal = goal =>\n  http.post('/users/creategoal', goal).then(response => response.data);\n\nconst getGoals = () => http.get('/users/goals').then(response => response.data);\n\nconst getLastGoals = days =>\n  http.post(`/users/goals/${days}`).then(response => response.data);\n\nexport default {\n  createGoal,\n  getGoals,\n  getLastGoals\n};\n","import React, { Component } from 'react';\nimport goalsService from '../../services/goals-service';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\n\nclass ReadToday extends Component {\n  state = {\n    pagesDay: 0\n  };\n\n  handlePagesChange = event => {\n    const pages = event.target.value;\n    this.setState({\n      pagesDay: pages\n    });\n  };\n\n  handlePagesSubmit = event => {\n    event.preventDefault();\n    const goal = {\n      pagesDay: this.state.pagesDay\n    };\n    if (goal.pagesDay > 0) {\n      goalsService.createGoal(goal).then();\n      this.props.user.pagesGoal <= this.state.pagesDay\n        ? this.props.congratsBox(true)\n        : this.props.congratsBox(false);\n    }\n  };\n\n  valuePages = () => {\n    goalsService.getLastGoals(1).then(goals => {\n      if (goals.length !== 0) {\n        const todayDate = new Date();\n        const goalDate = new Date(goals[0].updatedAt);\n        const day = todayDate.getDate() === goalDate.getDate();\n        const month = todayDate.getMonth() === goalDate.getMonth();\n        const year = todayDate.getFullYear() === goalDate.getFullYear();\n        if (day && month && year) {\n          this.setState({\n            pagesDay: goals[0].pagesDay\n          });\n        }\n      }\n    });\n  };\n\n  componentDidMount = () => {\n    this.valuePages();\n  };\n\n  render() {\n    const { pagesDay } = this.state;\n    return (\n      <div className='pages-read-container'>\n        <h4 className='how-many-pages-title'>\n          How many pages did you read today?\n        </h4>\n        <div className='pages-read-today'>\n          <div className='input-field pages-input'>\n            <input\n              type='number'\n              name='pages'\n              onChange={this.handlePagesChange}\n              value={pagesDay}\n            />\n          </div>\n          <button\n            className='my-button confirm-pages'\n            onClick={this.handlePagesSubmit}\n          >\n            pages read today\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(ReadToday);\n","import React, { Component } from 'react';\nimport { DateTime } from 'luxon';\nimport { Select } from 'antd';\nimport { ResponsiveLine } from 'nivo';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport CountUp from 'react-countup';\nimport goalsService from '../../services/goals-service';\n\nclass DateChart extends Component {\n  state = {\n    period: 'month',\n    pagesRead: 0,\n    data: []\n  };\n\n  handlePeriodChange = event => {\n    const periodSelect = event;\n    this.handleDataGraphic(periodSelect);\n  };\n\n  handleDataGraphic = period => {\n    const data = [];\n\n    const unshiftToData = (x, y) => {\n      data.unshift({ x, y });\n    };\n\n    switch (period) {\n      case 'year':\n        goalsService.getLastGoals(365).then(goals => {\n          if (goals) {\n            for (let goal of goals) {\n              let date = new Date(goal.updatedAt);\n              unshiftToData(\n                DateTime.fromJSDate(date).day +\n                  DateTime.fromJSDate(date).monthShort,\n                goal.pagesDay\n              );\n            }\n          }\n          this.setDataGraphic(data, period);\n        });\n        break;\n      case 'month':\n        goalsService.getLastGoals(30).then(goals => {\n          if (goals) {\n            for (let goal of goals) {\n              let date = new Date(goal.updatedAt);\n              unshiftToData(\n                DateTime.fromJSDate(date).day +\n                  DateTime.fromJSDate(date).monthShort,\n                goal.pagesDay\n              );\n            }\n          }\n          this.setDataGraphic(data, period);\n        });\n        break;\n      case 'week':\n      default:\n        goalsService.getLastGoals(7).then(goals => {\n          if (goals) {\n            for (let goal of goals) {\n              let date = new Date(goal.updatedAt);\n              unshiftToData(\n                DateTime.fromJSDate(date).weekdayShort +\n                  DateTime.fromJSDate(date).day,\n                goal.pagesDay\n              );\n            }\n          }\n          this.setDataGraphic(data, period);\n        });\n    }\n  };\n\n  setDataGraphic = (data, period) => {\n    const pagesRead = data.reduce((acc, elem) => {\n      return acc + elem.y;\n    }, 0);\n    this.setState({\n      data,\n      period,\n      pagesRead\n    });\n  };\n\n  componentDidMount = () => {\n    this.handleDataGraphic('month');\n  };\n\n  componentDidUpdate = () => {\n    this.handleDataGraphic(this.state.period);\n  };\n\n  render() {\n    const { data, pagesRead } = this.state;\n    const dataArr = [\n      {\n        id: 'Pages',\n        data: [...data]\n      }\n    ];\n    const responsiveLine = (\n      <ResponsiveLine\n        data={dataArr}\n        margin={{\n          top: 30,\n          right: 20,\n          bottom: 30,\n          left: 20\n        }}\n        curve='natural'\n        axisTop={null}\n        axisRight={null}\n        axisBottom={null}\n        axisLeft={null}\n        enableGridY={false}\n        enableGridX={false}\n        lineWidth={7}\n        dotSize={0}\n        colors='#fafafa'\n        dotColor='inherit:darker(1)'\n        dotLabelYOffset={-15}\n        isInteractive={false}\n        enableStackTooltip={false}\n        animate={true}\n        motionStiffness={100}\n        motionDamping={5}\n      />\n    );\n\n    return (\n      <div className='category-screen'>\n        <div className='pages-read-wrapper'>\n          <CountUp\n            className='pages-read-count'\n            start={0}\n            duration={3}\n            end={pagesRead}\n            redraw={true}\n          />\n          <h4 className='pages-read-in'>pages read in</h4>\n          <Select\n            className='pages-period-select'\n            defaultValue='month'\n            onChange={this.handlePeriodChange}\n          >\n            <Select.Option value='week'>the last week</Select.Option>\n            <Select.Option value='month'>the last month</Select.Option>\n            <Select.Option value='year'>the last year</Select.Option>\n          </Select>\n        </div>\n        <div className='chart-graphic'>{responsiveLine}</div>\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(DateChart);\n","import React, { Component } from 'react';\nimport ReadToday from '../../components/motivation/ReadToday';\nimport DateChart from '../../components/motivation/DateChart';\n\nclass Motivation extends Component {\n  state = {\n    congratsBox: false,\n    congratsText: ''\n  };\n\n  handleCongratsText = isAchievedGoal => {\n    if (isAchievedGoal) {\n      this.setState({\n        congratsBox: true,\n        congratsText: 'Congrats!! You rocked your goal!'\n      });\n    } else {\n      this.setState({\n        congratsBox: true,\n        congratsText:\n          \"Good!! It's better than nothing. Keep improving to reach your daily goal.\"\n      });\n    }\n  };\n\n  closeCongratsBox = () => {\n    this.setState({\n      congratsBox: false,\n      congratsText: '',\n      refreshChart: true\n    });\n  };\n\n  render() {\n    const { congratsText } = this.state;\n    return (\n      <div className='screen-container'>\n        {congratsText && (\n          <div className='congrats-box'>\n            <div className='congrats-text'>\n              <p>{congratsText}</p>\n              <button\n                className='my-button congrats-button'\n                onClick={this.closeCongratsBox}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        )}\n        <DateChart />\n        <ReadToday congratsBox={this.handleCongratsText} />\n      </div>\n    );\n  }\n}\n\nexport default Motivation;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class UserItem extends Component {\n  state = {\n    user: this.props.user,\n    book: this.props.book\n  };\n\n  render() {\n    const { id, name, avatarURL } = this.state.user;\n    const { book } = this.state;\n    return (\n      <li className='collection-item avatar'>\n        <Link to={`/friends/${id}`}>\n          <img src={avatarURL} alt={name} className='circle' />\n          <span className='title'>\n            <strong>{name}</strong>\n          </span>\n          {book ? (\n            <p className='currently-reading'>\n              Currently reading:{' '}\n              <span className='currently-reading-text'>\n                <span className='currently-reading-title'> {book.title}</span>{' '}\n              </span>\n            </p>\n          ) : (\n            <p className='currently-reading'>Not currently reading</p>\n          )}\n        </Link>\n        <a href='#!' className='secondary-content'>\n          <i className='material-icons' />\n        </a>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport userService from '../../services/user-service';\nimport booksService from '../../services/books-service';\nimport UserItem from './UserItem';\nimport Loading from '../misc/Loading';\n\nclass UserList extends Component {\n  state = {\n    users: [],\n    loading: true\n  };\n\n  componentDidMount = () => {\n    userService.getUsers().then(users => {\n      users = users.filter(user => user.id !== this.props.user.id);\n\n      users = users.map(async elem => {\n        const bookReading = elem.userbooks.find(\n          elem => elem.state === 'reading'\n        );\n        if (bookReading) {\n          return booksService.getOneBook(bookReading.book).then(bookReading => {\n            elem.readingBook = {\n              id: bookReading.id,\n              title: bookReading.title,\n              authors: bookReading.authors,\n              image: bookReading.imageLink\n            };\n            return elem;\n          });\n        } else {\n          return elem;\n        }\n      });\n\n      Promise.all(users).then(users =>\n        this.setState({ users: users, loading: false })\n      );\n    });\n  };\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n      <div className='category-screen'>\n        <h2 className='category-title'>\n          Discover what other people are reading\n        </h2>\n        <div className='friendslist-container'>\n          <ul className='collection'>\n            {!loading ? (\n              this.state.users.map(user => {\n                if (user.readingBook)\n                  return (\n                    <UserItem\n                      user={user}\n                      book={user.readingBook}\n                      key={user.id}\n                    />\n                  );\n                else return <UserItem user={user} key={user.id} />;\n              })\n            ) : (\n              <Loading />\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(UserList);\n","import React, { Component } from 'react';\nimport UserList from '../../components/friends/UserList';\n\nexport default class Friends extends Component {\n  render() {\n    return (\n      <div className='screen-container'>\n        <UserList />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport booksService from '../../services/books-service';\nimport UserItem from '../../components/friends/UserItem';\nimport Loading from '../../components/misc/Loading';\nimport userService from '../../services/user-service';\n\nclass FollowList extends Component {\n  state = {\n    users: [],\n    loading: true\n  };\n\n  componentDidMount = () => {\n    const { followstate } = this.props.match.params;\n    let followUsers = [];\n\n    if (followstate === 'following') {\n      followUsers = this.props.user.following;\n      const followPromises = followUsers.map(async elem => {\n        return userService.getUser(elem.followed).then(user => {\n          const bookReading = user.userbooks.find(\n            book => book.state === 'reading'\n          );\n          if (bookReading) {\n            return booksService.getOneBook(bookReading.book).then(rbook => {\n              user.readingBook = {\n                id: rbook.id,\n                title: rbook.title,\n                authors: rbook.authors,\n                image: rbook.imageLink\n              };\n              return user;\n            });\n          } else {\n            return user;\n          }\n        });\n      });\n      Promise.all(followPromises).then(users => {\n        this.setState({ users, loading: false });\n      });\n    }\n    if (followstate === 'followers') {\n      followUsers = this.props.user.followers;\n      const followPromises = followUsers.map(async elem => {\n        return userService.getUser(elem.follower).then(user => {\n          const bookReading = user.userbooks.find(\n            book => book.state === 'reading'\n          );\n          if (bookReading) {\n            return booksService.getOneBook(bookReading.book).then(rbook => {\n              user.readingBook = {\n                id: rbook.id,\n                title: rbook.title,\n                authors: rbook.authors,\n                image: rbook.imageLink\n              };\n              return user;\n            });\n          } else {\n            return user;\n          }\n        });\n      });\n      Promise.all(followPromises).then(users => {\n        this.setState({ users, loading: false });\n      });\n    }\n  };\n\n  render() {\n    const { loading } = this.state;\n    const { followstate } = this.props.match.params;\n\n    return (\n      <div className='screen-container'>\n        <div className='category-screen'>\n          {followstate === 'following' && (\n            <h2 className='category-title'>Friends that you follow</h2>\n          )}\n          {followstate === 'followers' && (\n            <h2 className='category-title'>Friends who follow you</h2>\n          )}\n          <div className='friendslist-container'>\n            <ul className='collection'>\n              {!loading ? (\n                this.state.users.map(user => {\n                  if (user.readingBook)\n                    return (\n                      <UserItem\n                        user={user}\n                        book={user.readingBook}\n                        key={user.id}\n                      />\n                    );\n                  else return <UserItem user={user} key={user.id} />;\n                })\n              ) : (\n                <Loading />\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(FollowList);\n","import http from './base-http-service';\n\nconst getProfileBooks = state =>\n  http\n    .get('/users/books', {\n      params: {\n        state: state\n      }\n    })\n    .then(response => response.data);\n\nconst getStateBook = book =>\n  http.get(`/users/books/${book}`).then(response => response.data);\n\nconst createStateBook = (book, state) =>\n  http\n    .post(`/users/books/${book}?state=${state}`)\n    .then(response => response.data);\n\nexport default {\n  getProfileBooks,\n  getStateBook,\n  createStateBook\n};\n","import React, { Component } from 'react';\nimport { Collapse, Icon } from 'antd';\nimport Slider from 'react-slick';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport userbooksService from '../../services/userbook-service';\nimport BookItem from '../../components/books/BookItem';\n\nconst Panel = Collapse.Panel;\n\nexport default class BookDetail extends Component {\n  state = {\n    book: {},\n    relatedBooks: [],\n    state: ''\n  };\n\n  handleStateButton = event => {\n    const state = event.target.value;\n    this.setState({ state });\n    userbooksService.createStateBook(this.state.book.id, state);\n    userbooksService.getStateBook(this.state.book.id).then(state => {\n      this.setState({ state: state });\n    });\n  };\n\n  formatDate = date => {\n    return new Date(date).toLocaleDateString();\n  };\n\n  handleAuthors = () => {\n    if (this.state.book.authors) {\n      let authors = [this.state.book.authors];\n      if (authors.length === 1) authors = authors[0];\n      if (authors.length > 1) authors = authors.join(' & ');\n      return authors;\n    } else {\n      return '';\n    }\n  };\n\n  componentDidMount = () => {\n    const { bookId } = this.props.match.params;\n    Promise.all([\n      booksService.getOneBook(bookId),\n      userbooksService.getStateBook(bookId)\n    ]).then(([book, state]) => {\n      const genre = book.genres[0];\n      booksService.getRelatedBooks(genre).then(relatedBooks => {\n        this.setState({\n          book,\n          state,\n          relatedBooks\n        });\n      });\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    const { bookId } = this.props.match.params;\n    if (bookId !== prevProps.match.params.bookId) {\n      Promise.all([\n        booksService.getOneBook(bookId),\n        userbooksService.getStateBook(bookId)\n      ]).then(([book, state]) => {\n        const genre = book.genres[0];\n        booksService.getRelatedBooks(genre).then(relatedBooks => {\n          this.setState(\n            {\n              book,\n              state,\n              relatedBooks\n            },\n            () => (document.querySelector('body').scrollTop = 0)\n          );\n        });\n      });\n    }\n  }\n\n  render() {\n    const { book, state } = this.state;\n    const authors = this.handleAuthors();\n    const publishedDate = this.formatDate(this.state.book.publishedDate);\n    const relatedBooks = this.state.relatedBooks\n      .filter(elem => elem.isbn !== book.isbn)\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        let badge = book.genres[0];\n        if (badge.includes(' ')) badge = badge.substr(0, badge.indexOf(' '));\n        return <BookItem key={book.id} book={book} badge={badge} />;\n      });\n    return (\n      <div className='screen-container'>\n        <div className='book-detail-container'>\n          <div className='book-detail-maininfo'>\n            <figure className='book-detail-cover'>\n              <img src={book.imageLink} alt={book.title} />\n            </figure>\n            <div className='book-detail-title'>\n              <h2 className='detail-title'>{book.title}</h2>\n              <h4 className='detail-author'>{authors}</h4>\n            </div>\n          </div>\n          <div className='book-detail-buttons collection'>\n            <button\n              className={\n                state === 'pending'\n                  ? 'my-button active-state'\n                  : 'my-button pending-button'\n              }\n              value='pending'\n              onClick={this.handleStateButton}\n            >\n              pending\n            </button>\n            <button\n              className={\n                state === 'reading'\n                  ? 'my-button active-state'\n                  : 'my-button reading-button'\n              }\n              value='reading'\n              onClick={this.handleStateButton}\n            >\n              reading\n            </button>\n            <button\n              className={\n                state === 'read'\n                  ? 'my-button active-state'\n                  : 'my-button reading-button'\n              }\n              value='read'\n              onClick={this.handleStateButton}\n            >\n              read\n            </button>\n          </div>\n          <div className='book-detail-summary'>\n            <Collapse\n              bordered={false}\n              defaultActiveKey={[]}\n              expandIcon={({ isActive }) => (\n                <Icon type='caret-right' rotate={isActive ? 90 : 0} />\n              )}\n            >\n              {book.googleRating && (\n                <Panel header='Rating' key='1'>\n                  {book.googleRating} <Icon type='star' theme='filled' />\n                </Panel>\n              )}\n              {book.pageCount && (\n                <Panel header='Page Count' key='2'>\n                  {book.pageCount} pages\n                </Panel>\n              )}\n              {publishedDate && (\n                <Panel header='Published Date' key='3'>\n                  Date: {publishedDate}\n                </Panel>\n              )}\n              {book.description && (\n                <Panel header='Description' key='4'>\n                  {book.description}\n                </Panel>\n              )}\n            </Collapse>\n          </div>\n        </div>\n        <div className='category-screen'>\n          <h4 className='category-title'>Related books</h4>\n          <ul className='book-container'>\n            <Slider {...sliderSettings}>{relatedBooks}</Slider>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nclass FriendProfileBox extends Component {\n  handleGenres = () => {\n    if (this.props.friend) {\n      let genres = [this.props.friend.favGenres];\n      if (genres.length === 1) genres = genres[0];\n      if (genres.length > 1) genres = genres.slice(0, 2).join(' & ');\n      return genres;\n    } else {\n      return '';\n    }\n  };\n\n  render() {\n    const { name, avatarURL, followers } = this.props.friend;\n    const { userId } = this.props;\n    const followButton = followers.some(\n      follower => follower.follower === userId\n    );\n    const genres = this.handleGenres();\n    return (\n      <div className='category-screen'>\n        <div className='card horizontal profile-card'>\n          <div className='card-image profile-avatar'>\n            <img\n              src={\n                avatarURL\n                  ? avatarURL\n                  : 'https://profile.actionsprout.com/default.jpeg'\n              }\n              alt='profile-pic'\n              className='profile-avatar-img'\n            />\n          </div>\n          <div className='card-stacked'>\n            <div className='card-content'>\n              <h4>{name}</h4>\n              <p>\n                Favorite genres: <strong>{genres}</strong>\n              </p>\n            </div>\n            <div className='card-action profile-link'>\n              {!followButton && (\n                <button\n                  className='my-button follow-button'\n                  onClick={this.props.handleFollow}\n                >\n                  Follow the reader\n                </button>\n              )}\n              {followButton && (\n                <button\n                  className='my-button unfollow-button'\n                  onClick={this.props.handleUnfollow}\n                >\n                  Unfollow the reader\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FriendProfileBox;\n","import React, { Component } from 'react';\nimport BookListItem from '../books/BookListItem';\n\nexport default class ReadingBookItem extends Component {\n  render() {\n    const { book, friendName } = this.props;\n    const name = friendName.substr(0, friendName.indexOf(' '));\n    return (\n      <div className='category-screen'>\n        <h2 className='category-title'>{name} is currently reading</h2>\n        <div className='booklist-container'>\n          <ul className='collection'>\n            <BookListItem book={book} key={book.id} />\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport sliderSettings from '../../utils/sliderSettings';\nimport booksService from '../../services/books-service';\nimport BookItem from '../books/BookItem';\n\nexport default class RelatedFriendBooks extends Component {\n  state = {\n    friend: {},\n    books: []\n  };\n\n  componentDidMount = () => {\n    const genres = this.props.friend.favGenres.join(',');\n    booksService.getRelatedBooks(genres).then(response => {\n      this.setState({\n        books: response\n      });\n    });\n  };\n\n  render() {\n    const books = this.state.books\n      .sort(() => 0.5 - Math.random())\n      .map(book => {\n        let badge = book.genres[0];\n        if (badge.includes(' ')) badge = badge.substr(0, badge.indexOf(' '));\n        return <BookItem key={book.id} book={book} badge={badge} />;\n      });\n    const { name } = this.props.friend;\n    const friendName = name.substr(0, name.indexOf(' '));\n\n    return (\n      <div className='category-screen'>\n        <h4 className='category-title'>\n          Books related to what {friendName} likes\n        </h4>\n        <ul className='book-container'>\n          <Slider {...sliderSettings}>{books}</Slider>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport userService from '../../services/user-service';\nimport booksService from '../../services/books-service';\nimport FriendProfileBox from './FriendProfileBox';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport ReadingBookItem from './ReadingBookItem';\nimport RelatedFriendBooks from './RelatedFriendBooks';\nimport Loading from '../misc/Loading';\n\nclass UserDetail extends Component {\n  state = {\n    friend: {},\n    readingBook: {},\n    followButton: false,\n    loading: true\n  };\n\n  handleFollow = () => {\n    const { friend } = this.state;\n    userService.followUser(this.state.friend.id).then(relation => {\n      if (relation) {\n        this.setState({\n          friend: {\n            ...friend,\n            followers: [...friend.followers, relation]\n          }\n        });\n      }\n    });\n  };\n\n  handleUnfollow = () => {\n    const { friend } = this.state;\n    const { user } = this.props;\n    userService.unfollowUser(this.state.friend.id).then(() => {\n      this.setState({\n        friend: {\n          ...friend,\n          followers: friend.followers.filter(\n            ({ follower }) => follower !== user.id\n          )\n        }\n      });\n    });\n  };\n\n  componentDidMount = () => {\n    const userId = this.props.match.params.userId;\n    userService.getUser(userId).then(friend => {\n      const bookReading = friend.userbooks.find(\n        elem => elem.state === 'reading'\n      );\n      if (bookReading) {\n        booksService.getOneBook(bookReading.book).then(readingBook => {\n          this.setState({ friend, readingBook, loading: false });\n        });\n      } else {\n        this.setState({ friend, loading: false });\n      }\n    });\n  };\n\n  render() {\n    const { friend, followButton, loading, readingBook } = this.state;\n    const { id } = this.props.user;\n    return (\n      <div className='screen-container'>\n        {!loading ? (\n          <Fragment>\n            <FriendProfileBox\n              friend={friend}\n              followButton={followButton}\n              handleFollow={this.handleFollow}\n              handleUnfollow={this.handleUnfollow}\n              userId={id}\n            />\n            {readingBook.title && (\n              <ReadingBookItem book={readingBook} friendName={friend.name} />\n            )}\n          </Fragment>\n        ) : (\n          <Loading />\n        )}\n        {friend.name && <RelatedFriendBooks friend={friend} />}\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(UserDetail);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService from '../../services/user-service';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\n\nclass SocialProfileBox extends Component {\n  state = {\n    followed: 0,\n    following: 0\n  };\n\n  componentDidMount = () => {\n    userService.getSocialUsers(this.props.user.id).then(social => {\n      this.setState({\n        followed: social.followers.length,\n        following: social.following.length\n      });\n    });\n  };\n\n  render() {\n    const { followed, following } = this.state;\n    return (\n      <ul className='collection follow-container'>\n        <div className='follow-item'>\n          <div className='follow-content'>\n            <Link to='/friends/list/followers'>\n              <p>Followed by</p>\n              <span className='follow-title'>{followed}</span>\n              <p>readers</p>\n            </Link>\n          </div>\n        </div>\n        <div className='follow-item'>\n          <div className='follow-content'>\n            <Link to='/friends/list/following'>\n              <p>Following</p>\n              <span className='follow-title'>{following}</span>\n              <p>readers</p>\n            </Link>\n          </div>\n        </div>\n      </ul>\n    );\n  }\n}\n\nexport default withAuthConsumer(SocialProfileBox);\n","import React, { Component, Fragment } from 'react';\nimport { withAuthConsumer } from '../../contexts/AuthStore';\nimport authService from '../../services/auth-service';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { createForm } from '../../utils/createForm';\nimport { Upload, Button, Icon } from 'antd';\nimport { checkEmail, checkName } from '../../utils/validators';\nimport InputField from '../InputField';\nimport SocialProfileBox from './SocialProfileBox';\n\nlibrary.add(faCog);\n\nclass ProfileBox extends Component {\n  state = {\n    user: this.props.user,\n    error: '',\n    editBox: false,\n    avatar: null\n  };\n\n  handleGenres = () => {\n    if (this.props.user) {\n      let genres = [this.props.user.favGenres];\n      if (genres.length === 1) genres = genres[0];\n      if (genres.length > 1) genres = genres.slice(0, 2).join(' & ');\n      return genres;\n    } else {\n      return '';\n    }\n  };\n\n  editProfile = () => {\n    this.setState({\n      editBox: true\n    });\n  };\n\n  cancelEdit = () => {\n    this.setState({\n      user: this.props.user,\n      error: '',\n      editBox: false,\n      avatar: null\n    });\n  };\n\n  submitProfile = event => {\n    const { avatar } = this.state;\n    const { form } = this.props;\n    event.preventDefault();\n    form.validateFields((errors, fields) => {\n      const hasErrors = errors && Object.keys(errors).length > 0;\n      if (!hasErrors) {\n        if (avatar) {\n          fields.avatar = avatar;\n        }\n        authService.updateProfile(fields).then(\n          user => {\n            this.setState(\n              { editBox: false, user: { ...this.state.user, ...user } },\n              () => {\n                this.props.onUserChanged(user);\n              }\n            );\n          },\n          error => {\n            const { message } = error.response.data;\n            this.setState({\n              error: message\n            });\n          }\n        );\n      }\n    });\n  };\n\n  render() {\n    const { user, editBox, error, avatar } = this.state;\n    const { getFieldProps, getFieldError } = this.props.form;\n    const genres = this.handleGenres();\n    return (\n      <Fragment>\n        {!editBox && (\n          <div className='category-screen'>\n            <div className='card horizontal profile-card'>\n              <div className='card-image profile-avatar'>\n                <img\n                  src={\n                    user.avatarURL\n                      ? user.avatarURL\n                      : 'https://profile.actionsprout.com/default.jpeg'\n                  }\n                  alt='profile-pic'\n                  className='profile-avatar-img'\n                />\n              </div>\n              <div className='card-stacked'>\n                <div className='card-content'>\n                  <h4>{user.name}</h4>\n                  <p>\n                    Daily goal: <strong>{user.pagesGoal} pages</strong>\n                  </p>\n                  <p>\n                    Genres: <strong>{genres}</strong>\n                  </p>\n                </div>\n                <SocialProfileBox />\n                <div className='profile-link'>\n                  <FontAwesomeIcon icon='cog' onClick={this.editProfile} />\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {editBox && (\n          <div className='category-screen'>\n            <div className='card-horizontal profile-card profile-card-edit'>\n              <div className='card-image profile-avatar-edit'>\n                <div className='profile-form-image'>\n                  <img\n                    src={\n                      avatar\n                        ? URL.createObjectURL(avatar)\n                        : user.avatarURL\n                        ? user.avatarURL\n                        : 'https://profile.actionsprout.com/default.jpeg'\n                    }\n                    alt='profile-pic'\n                    className='profile-avatar-img-edit'\n                  />\n                  <Upload\n                    className='upload-pic-button'\n                    name='logo'\n                    listType='picture'\n                    beforeUpload={file => {\n                      this.setState({ avatar: file });\n                      return false;\n                    }}\n                  >\n                    <Button htmlType='button'>\n                      <Icon type='upload' /> Change avatar\n                    </Button>\n                  </Upload>\n                </div>\n              </div>\n              <div className='card-stacked profile-info'>\n                <div className='card-content'>\n                  <form id='profile-form' onSubmit={this.submitProfile}>\n                    <div className='profile-form-group'>\n                      <label>Name</label>\n                      <InputField\n                        type='text'\n                        allowClear\n                        {...getFieldProps('name', {\n                          initialValue: user.name,\n                          validateFirst: true,\n                          validateTrigger: 'onblur',\n                          rules: [{ required: true, validator: checkName }]\n                        })}\n                        errors={getFieldError('name')}\n                      />\n                    </div>\n                    <div className='profile-form-group'>\n                      <label>Email</label>\n                      <InputField\n                        type='email'\n                        allowClear\n                        {...getFieldProps('email', {\n                          initialValue: user.email,\n                          validateFirst: true,\n                          validateTrigger: 'onblur',\n                          rules: [{ required: true, validator: checkEmail }]\n                        })}\n                        errors={getFieldError('email')}\n                      />\n                    </div>\n                    <div className='profile-form-group'>\n                      <label>Pages goal</label>\n                      <InputField\n                        type='number'\n                        allowClear\n                        {...getFieldProps('pagesGoal', {\n                          initialValue: user.pagesGoal,\n                          validateFirst: true,\n                          validateTrigger: 'onblur',\n                          rules: [{ required: true }]\n                        })}\n                      />\n                    </div>\n                    <p className='error'>{error}</p>\n                    <div className='profile-form-group card-action'>\n                      <div className='profile-group-submit'>\n                        <button\n                          onClick={this.cancelEdit}\n                          className='my-button cancel-button'\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          type='submit'\n                          className='my-button update-button'\n                        >\n                          Update\n                        </button>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default withAuthConsumer(createForm()(ProfileBox));\n","import React, { Component } from 'react';\nimport BookListItem from './BookListItem';\nimport userbookService from '../../services/userbook-service';\n\nexport default class ProfileBooksList extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount = () => {\n    userbookService.getProfileBooks(this.props.state).then(books => {\n      this.setState({\n        books: books\n      });\n    });\n  };\n\n  render() {\n    const books = this.state.books.map(book => {\n      return <BookListItem book={book} key={book.id} />;\n    });\n    return (\n      <div className='booklist-container'>\n        <ul className='collection'>{books}</ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ProfileBooksList from '../books/ProfileBooksList';\n\nexport default class PendingBooks extends Component {\n  render() {\n    return (\n      <div className='category-screen'>\n        <h2 className='category-title'>Books that you have pending</h2>\n        <ProfileBooksList state='pending' />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ProfileBooksList from '../books/ProfileBooksList';\n\nexport default class ReadBooks extends Component {\n  render() {\n    return (\n      <div className='category-screen'>\n        <h2 className='category-title'>Books that you have read</h2>\n        <ProfileBooksList state='read' />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ProfileBooksList from '../books/ProfileBooksList';\n\nexport default class ReadingBooks extends Component {\n  render() {\n    return (\n      <div className='category-screen'>\n        <h2 className='category-title'>Books that you are reading</h2>\n        <ProfileBooksList state='reading' />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ProfileBox from '../../components/profile/ProfileBox';\nimport PendingBooks from '../../components/profile/PendingBooks';\nimport ReadBooks from '../../components/profile/ReadBooks';\nimport ReadingBooks from '../../components/profile/ReadingBooks';\n\nexport default class Profile extends Component {\n  render() {\n    return (\n      <div className='screen-container'>\n        <ProfileBox />\n        <ReadingBooks />\n        <PendingBooks />\n        <ReadBooks />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { AuthContext } from '../contexts/AuthStore';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst LoggedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <AuthContext.Consumer>\n      {({ isAuthenticated, user }) => (\n        <Route\n          {...rest}\n          render={props => {\n            if (!isAuthenticated()) {\n              return <Component {...props} />;\n            }\n            return <Redirect to='/home' />;\n          }}\n        />\n      )}\n    </AuthContext.Consumer>\n  );\n};\n\nexport default LoggedRoute;\n","import React, { Fragment, Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Landing from './screens/Landing';\nimport Register from './screens/Register';\nimport Login from './screens/Login';\nimport UserNavBar from './components/misc/UserNavBar';\nimport BasicTopBar from './components/misc/BasicTopBar';\nimport Explore from './screens/user/Explore';\nimport Motivation from './screens/user/Motivation';\nimport Friends from './screens/user/Friends';\nimport FollowList from './screens/user/FollowList';\nimport BookDetail from './screens/user/BookDetail';\nimport UserDetail from './components/friends/UserDetail';\nimport Profile from './screens/user/Profile';\nimport LoggedRoute from './guards/LoggedRoute';\nimport { withAuthConsumer } from './contexts/AuthStore';\n\nclass App extends Component {\n  render() {\n    const isUser = this.props.isAuthenticated();\n    return (\n      <div className='App'>\n        {!isUser && (\n          <Switch>\n            <LoggedRoute path='/register' component={Register} />\n            <LoggedRoute path='/login' component={Login} />\n            <Route exact path='/' component={Landing} />\n            <Redirect to='/' />\n          </Switch>\n        )}\n        {isUser && (\n          <Fragment>\n            <BasicTopBar />\n            <div className='screen-wrapper'>\n              <Switch>\n                <Route exact path='/home' component={Motivation} />\n                <Route exact path='/explore' component={Explore} />\n                <Route exact path='/friends' component={Friends} />\n                <Route exact path='/profile' component={Profile} />\n                <Route\n                  exact\n                  path='/friends/list/:followstate'\n                  component={FollowList}\n                />\n                <Route path='/explore/:bookId' component={BookDetail} />\n                <Route path='/friends/:userId' component={UserDetail} />\n                <Redirect to='/home' />\n              </Switch>\n            </div>\n            <UserNavBar />\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withAuthConsumer(App);\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'antd/dist/antd.css';\nimport 'react-slick/dist/react-slick';\nimport './scss/style.scss';\n\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { AuthStore } from './contexts/AuthStore';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <AuthStore>\n      <App />\n    </AuthStore>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}